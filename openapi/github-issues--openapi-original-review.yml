executed: '2025-07-11T00:01:51.522Z'
results:
  - code: openapi-info-version-info
    message: Info Has Version
    path:
      - info
      - version
    severity: 2
    range:
      start:
        line: 2
        character: 11
      end:
        line: 2
        character: 16
  - code: openapi-info-title-info
    message: Info Has Title
    path:
      - info
      - title
    severity: 2
    range:
      start:
        line: 3
        character: 9
      end:
        line: 3
        character: 19
  - code: openapi-info-title-upper-case-error
    message: Info Title Has First Characters Capitalized
    path:
      - info
      - title
    severity: 0
    range:
      start:
        line: 3
        character: 9
      end:
        line: 3
        character: 19
  - code: openapi-info-description-info
    message: Info Has Description
    path:
      - info
      - description
    severity: 2
    range:
      start:
        line: 4
        character: 15
      end:
        line: 4
        character: 33
  - code: openapi-info-license-identifier-error
    message: Info MUST Have License Identifier
    path:
      - info
      - license
    severity: 0
    range:
      start:
        line: 5
        character: 10
      end:
        line: 7
        character: 38
  - code: openapi-info-license-info
    message: Info Has License
    path:
      - info
      - license
    severity: 2
    range:
      start:
        line: 5
        character: 10
      end:
        line: 7
        character: 38
  - code: openapi-info-license-name-info
    message: Info License Name
    path:
      - info
      - license
      - name
    severity: 2
    range:
      start:
        line: 6
        character: 10
      end:
        line: 6
        character: 13
  - code: openapi-info-license-url-info
    message: Info Has License URL
    path:
      - info
      - license
      - url
    severity: 2
    range:
      start:
        line: 7
        character: 9
      end:
        line: 7
        character: 38
  - code: openapi-info-terms-of-service-info
    message: Info Has Terms of Service
    path:
      - info
      - termsOfService
    severity: 2
    range:
      start:
        line: 8
        character: 18
      end:
        line: 8
        character: 74
  - code: openapi-info-contact-email-error
    message: Info MUST Have Contact Email
    path:
      - info
      - contact
    severity: 0
    range:
      start:
        line: 9
        character: 10
      end:
        line: 11
        character: 64
  - code: openapi-info-contact-info
    message: Info Has Contact Object
    path:
      - info
      - contact
    severity: 2
    range:
      start:
        line: 9
        character: 10
      end:
        line: 11
        character: 64
  - code: openapi-info-contact-name-info
    message: Info Has Contact Name
    path:
      - info
      - contact
      - name
    severity: 2
    range:
      start:
        line: 10
        character: 10
      end:
        line: 10
        character: 17
  - code: openapi-info-contact-url-info
    message: Info Has Contact URL
    path:
      - info
      - contact
      - url
    severity: 2
    range:
      start:
        line: 11
        character: 9
      end:
        line: 11
        character: 64
  - code: openapi-tags-object-info
    message: OpenAPIs Have a Tag Object
    path:
      - tags
    severity: 2
    range:
      start:
        line: 14
        character: 5
      end:
        line: 14
        character: 8
  - code: openapi-tags-one-error
    message: MUST Be At Least One Tag
    path:
      - tags
    severity: 0
    range:
      start:
        line: 14
        character: 5
      end:
        line: 14
        character: 8
  - code: openapi-external-docs-info
    message: OpenAPI Has External Documentation
    path:
      - externalDocs
    severity: 2
    range:
      start:
        line: 24
        character: 13
      end:
        line: 26
        character: 58
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
    severity: 0
    range:
      start:
        line: 28
        character: 40
      end:
        line: 104
        character: 29
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
    severity: 2
    range:
      start:
        line: 28
        character: 40
      end:
        line: 104
        character: 29
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
    severity: 2
    range:
      start:
        line: 28
        character: 40
      end:
        line: 104
        character: 29
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
    severity: 2
    range:
      start:
        line: 29
        character: 8
      end:
        line: 104
        character: 29
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
    severity: 0
    range:
      start:
        line: 29
        character: 8
      end:
        line: 104
        character: 29
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - summary
    severity: 2
    range:
      start:
        line: 30
        character: 15
      end:
        line: 30
        character: 51
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - summary
    severity: 2
    range:
      start:
        line: 30
        character: 15
      end:
        line: 30
        character: 51
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - description
    severity: 2
    range:
      start:
        line: 31
        character: 19
      end:
        line: 57
        character: 20
  - code: openapi-operations-description-length-error
    message: Operation Description MUST Be Less Than 250 Characters
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - description
    severity: 1
    range:
      start:
        line: 31
        character: 19
      end:
        line: 57
        character: 20
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - tags
    severity: 2
    range:
      start:
        line: 58
        character: 11
      end:
        line: 59
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 60
        character: 19
      end:
        line: 60
        character: 48
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 60
        character: 19
      end:
        line: 60
        character: 48
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 60
        character: 19
      end:
        line: 60
        character: 48
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 66
        character: 10
      end:
        line: 66
        character: 47
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '0'
      - $ref
    message: '''#/components/parameters/owner'' does not exist'
    severity: 0
    range:
      start:
        line: 66
        character: 16
      end:
        line: 66
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 66
        character: 16
      end:
        line: 66
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 67
        character: 10
      end:
        line: 67
        character: 46
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '1'
      - $ref
    message: '''#/components/parameters/repo'' does not exist'
    severity: 0
    range:
      start:
        line: 67
        character: 16
      end:
        line: 67
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 67
        character: 16
      end:
        line: 67
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 68
        character: 10
      end:
        line: 68
        character: 46
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '2'
      - $ref
    message: '''#/components/parameters/sort'' does not exist'
    severity: 0
    range:
      start:
        line: 68
        character: 16
      end:
        line: 68
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 68
        character: 16
      end:
        line: 68
        character: 46
  - code: openapi-parameters-componentized-error
    message: Parameters MUST use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '3'
    severity: 0
    range:
      start:
        line: 69
        character: 10
      end:
        line: 77
        character: 20
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '4'
    severity: 1
    range:
      start:
        line: 78
        character: 10
      end:
        line: 78
        character: 47
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '4'
      - $ref
    message: '''#/components/parameters/since'' does not exist'
    severity: 0
    range:
      start:
        line: 78
        character: 16
      end:
        line: 78
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '4'
      - $ref
    severity: 2
    range:
      start:
        line: 78
        character: 16
      end:
        line: 78
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '5'
    severity: 1
    range:
      start:
        line: 79
        character: 10
      end:
        line: 79
        character: 50
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '5'
      - $ref
    message: '''#/components/parameters/per-page'' does not exist'
    severity: 0
    range:
      start:
        line: 79
        character: 16
      end:
        line: 79
        character: 50
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '5'
      - $ref
    severity: 2
    range:
      start:
        line: 79
        character: 16
      end:
        line: 79
        character: 50
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '6'
    severity: 1
    range:
      start:
        line: 80
        character: 10
      end:
        line: 80
        character: 46
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '6'
      - $ref
    message: '''#/components/parameters/page'' does not exist'
    severity: 0
    range:
      start:
        line: 80
        character: 16
      end:
        line: 80
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - parameters
      - '6'
      - $ref
    severity: 2
    range:
      start:
        line: 80
        character: 16
      end:
        line: 80
        character: 46
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
    severity: 0
    range:
      start:
        line: 81
        character: 16
      end:
        line: 99
        character: 58
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
    severity: 0
    range:
      start:
        line: 81
        character: 16
      end:
        line: 99
        character: 58
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
    severity: 0
    range:
      start:
        line: 81
        character: 16
      end:
        line: 99
        character: 58
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
    severity: 0
    range:
      start:
        line: 81
        character: 16
      end:
        line: 99
        character: 58
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
    severity: 0
    range:
      start:
        line: 81
        character: 16
      end:
        line: 99
        character: 58
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 82
        character: 14
      end:
        line: 95
        character: 47
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 83
        character: 23
      end:
        line: 83
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 84
        character: 18
      end:
        line: 92
        character: 67
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 85
        character: 29
      end:
        line: 92
        character: 67
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 86
        character: 21
      end:
        line: 89
        character: 60
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 86
        character: 21
      end:
        line: 89
        character: 60
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 90
        character: 23
      end:
        line: 92
        character: 67
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/issue-comment-items'' does not exist'
    severity: 0
    range:
      start:
        line: 92
        character: 24
      end:
        line: 92
        character: 67
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 92
        character: 24
      end:
        line: 92
        character: 67
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '200'
      - headers
      - Link
      - $ref
    message: '''#/components/headers/link'' does not exist'
    severity: 0
    range:
      start:
        line: 95
        character: 20
      end:
        line: 95
        character: 47
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '404'
      - $ref
    message: '''#/components/responses/not_found'' does not exist'
    severity: 0
    range:
      start:
        line: 97
        character: 16
      end:
        line: 97
        character: 50
  - code: openapi-response-get-404-schema-ref-error
    message: GET 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 97
        character: 16
      end:
        line: 97
        character: 50
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments
      - get
      - responses
      - '422'
      - $ref
    message: '''#/components/responses/validation_failed'' does not exist'
    severity: 0
    range:
      start:
        line: 99
        character: 16
      end:
        line: 99
        character: 58
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
    severity: 0
    range:
      start:
        line: 105
        character: 53
      end:
        line: 251
        character: 29
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
    severity: 2
    range:
      start:
        line: 105
        character: 53
      end:
        line: 251
        character: 29
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
    severity: 2
    range:
      start:
        line: 105
        character: 53
      end:
        line: 251
        character: 29
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
    severity: 2
    range:
      start:
        line: 106
        character: 8
      end:
        line: 158
        character: 29
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
    severity: 0
    range:
      start:
        line: 106
        character: 8
      end:
        line: 158
        character: 29
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - summary
    severity: 2
    range:
      start:
        line: 107
        character: 15
      end:
        line: 107
        character: 35
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - summary
    severity: 2
    range:
      start:
        line: 107
        character: 15
      end:
        line: 107
        character: 35
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - description
    severity: 2
    range:
      start:
        line: 108
        character: 19
      end:
        line: 130
        character: 20
  - code: openapi-operations-description-length-error
    message: Operation Description MUST Be Less Than 250 Characters
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - description
    severity: 1
    range:
      start:
        line: 108
        character: 19
      end:
        line: 130
        character: 20
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - tags
    severity: 2
    range:
      start:
        line: 131
        character: 11
      end:
        line: 132
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 133
        character: 19
      end:
        line: 133
        character: 37
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 133
        character: 19
      end:
        line: 133
        character: 37
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 133
        character: 19
      end:
        line: 133
        character: 37
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 139
        character: 10
      end:
        line: 139
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 139
        character: 16
      end:
        line: 139
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 140
        character: 10
      end:
        line: 140
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 140
        character: 16
      end:
        line: 140
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 141
        character: 10
      end:
        line: 141
        character: 52
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - parameters
      - '2'
      - $ref
    message: '''#/components/parameters/comment-id'' does not exist'
    severity: 0
    range:
      start:
        line: 141
        character: 16
      end:
        line: 141
        character: 52
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 141
        character: 16
      end:
        line: 141
        character: 52
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 142
        character: 16
      end:
        line: 153
        character: 50
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 142
        character: 16
      end:
        line: 153
        character: 50
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 142
        character: 16
      end:
        line: 153
        character: 50
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 142
        character: 16
      end:
        line: 153
        character: 50
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 142
        character: 16
      end:
        line: 153
        character: 50
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 143
        character: 14
      end:
        line: 151
        character: 61
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 144
        character: 23
      end:
        line: 144
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 145
        character: 18
      end:
        line: 151
        character: 61
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 146
        character: 29
      end:
        line: 151
        character: 61
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 147
        character: 21
      end:
        line: 148
        character: 58
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 147
        character: 21
      end:
        line: 148
        character: 58
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 149
        character: 23
      end:
        line: 151
        character: 61
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/issue-comment'' does not exist'
    severity: 0
    range:
      start:
        line: 151
        character: 24
      end:
        line: 151
        character: 61
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 151
        character: 24
      end:
        line: 151
        character: 61
  - code: openapi-response-get-404-schema-ref-error
    message: GET 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - get
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 153
        character: 16
      end:
        line: 153
        character: 50
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
    severity: 0
    range:
      start:
        line: 159
        character: 10
      end:
        line: 227
        character: 29
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - summary
    severity: 2
    range:
      start:
        line: 160
        character: 15
      end:
        line: 160
        character: 38
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - summary
    severity: 2
    range:
      start:
        line: 160
        character: 15
      end:
        line: 160
        character: 38
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - description
    severity: 2
    range:
      start:
        line: 161
        character: 19
      end:
        line: 183
        character: 20
  - code: openapi-operations-description-length-error
    message: Operation Description MUST Be Less Than 250 Characters
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - description
    severity: 1
    range:
      start:
        line: 161
        character: 19
      end:
        line: 183
        character: 20
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - tags
    severity: 2
    range:
      start:
        line: 184
        character: 11
      end:
        line: 185
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - operationId
    severity: 0
    range:
      start:
        line: 186
        character: 19
      end:
        line: 186
        character: 40
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - operationId
    severity: 2
    range:
      start:
        line: 186
        character: 19
      end:
        line: 186
        character: 40
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - operationId
    severity: 2
    range:
      start:
        line: 186
        character: 19
      end:
        line: 186
        character: 40
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 192
        character: 10
      end:
        line: 192
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 192
        character: 16
      end:
        line: 192
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 193
        character: 10
      end:
        line: 193
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 193
        character: 16
      end:
        line: 193
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 194
        character: 10
      end:
        line: 194
        character: 52
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 194
        character: 16
      end:
        line: 194
        character: 52
  - code: openapi-request-body-have-application-json-info
    message: Request Body Application JSON
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - requestBody
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 198
        character: 27
      end:
        line: 210
        character: 30
  - code: openapi-request-body-have-schema-info
    message: Request Body Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 199
        character: 19
      end:
        line: 206
        character: 22
  - code: openapi-request-body-have-schema-ref-info
    message: Request Bodies Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 199
        character: 19
      end:
        line: 206
        character: 22
  - code: openapi-request-body-have-examples-info
    message: Request Bodies Have Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 207
        character: 21
      end:
        line: 210
        character: 30
  - code: openapi-request-body-have-examples-ref-info
    message: Request Bodies Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - patch
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 207
        character: 21
      end:
        line: 210
        character: 30
  - code: openapi-no-request-body-on-delete-info
    message: DELETE Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
    severity: 2
    range:
      start:
        line: 228
        character: 11
      end:
        line: 251
        character: 29
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
    severity: 0
    range:
      start:
        line: 228
        character: 11
      end:
        line: 251
        character: 29
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 229
        character: 15
      end:
        line: 229
        character: 38
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 229
        character: 15
      end:
        line: 229
        character: 38
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - description
    severity: 2
    range:
      start:
        line: 230
        character: 19
      end:
        line: 232
        character: 78
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - tags
    severity: 2
    range:
      start:
        line: 233
        character: 11
      end:
        line: 234
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - operationId
    severity: 0
    range:
      start:
        line: 235
        character: 19
      end:
        line: 235
        character: 40
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 235
        character: 19
      end:
        line: 235
        character: 40
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 235
        character: 19
      end:
        line: 235
        character: 40
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 241
        character: 10
      end:
        line: 241
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 241
        character: 16
      end:
        line: 241
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 242
        character: 10
      end:
        line: 242
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 242
        character: 16
      end:
        line: 242
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 243
        character: 10
      end:
        line: 243
        character: 52
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 243
        character: 16
      end:
        line: 243
        character: 52
  - code: openapi-response-delete-400-status-code-error
    message: DELETE Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 244
        character: 16
      end:
        line: 246
        character: 31
  - code: openapi-response-delete-401-status-code-error
    message: DELETE Responses MUST Have 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 244
        character: 16
      end:
        line: 246
        character: 31
  - code: openapi-response-delete-403-status-code-error
    message: DELETE Responses MUST Have 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 244
        character: 16
      end:
        line: 246
        character: 31
  - code: openapi-response-delete-404-status-code-error
    message: DELETE Responses MUST Have 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 244
        character: 16
      end:
        line: 246
        character: 31
  - code: openapi-response-delete-429-status-code-error
    message: DELETE Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 244
        character: 16
      end:
        line: 246
        character: 31
  - code: openapi-response-delete-500-status-code-error
    message: DELETE Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 244
        character: 16
      end:
        line: 246
        character: 31
  - code: openapi-response-delete-204-status-code-info
    message: DELETE 204 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}
      - delete
      - responses
      - '204'
    severity: 2
    range:
      start:
        line: 245
        character: 14
      end:
        line: 246
        character: 31
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
    severity: 0
    range:
      start:
        line: 252
        character: 63
      end:
        line: 382
        character: 30
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
    severity: 2
    range:
      start:
        line: 252
        character: 63
      end:
        line: 382
        character: 30
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
    severity: 2
    range:
      start:
        line: 252
        character: 63
      end:
        line: 382
        character: 30
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
    severity: 2
    range:
      start:
        line: 253
        character: 8
      end:
        line: 310
        character: 30
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
    severity: 0
    range:
      start:
        line: 253
        character: 8
      end:
        line: 310
        character: 30
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - summary
    severity: 2
    range:
      start:
        line: 254
        character: 15
      end:
        line: 254
        character: 50
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - summary
    severity: 2
    range:
      start:
        line: 254
        character: 15
      end:
        line: 254
        character: 50
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - description
    severity: 2
    range:
      start:
        line: 255
        character: 19
      end:
        line: 257
        character: 106
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - tags
    severity: 2
    range:
      start:
        line: 258
        character: 11
      end:
        line: 259
        character: 25
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 260
        character: 19
      end:
        line: 260
        character: 51
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 260
        character: 19
      end:
        line: 260
        character: 51
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 260
        character: 19
      end:
        line: 260
        character: 51
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 266
        character: 10
      end:
        line: 266
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 266
        character: 16
      end:
        line: 266
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 267
        character: 10
      end:
        line: 267
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 267
        character: 16
      end:
        line: 267
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 268
        character: 10
      end:
        line: 268
        character: 52
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 268
        character: 16
      end:
        line: 268
        character: 52
  - code: openapi-parameters-componentized-error
    message: Parameters MUST use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '3'
    severity: 0
    range:
      start:
        line: 269
        character: 10
      end:
        line: 286
        character: 20
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '4'
    severity: 1
    range:
      start:
        line: 287
        character: 10
      end:
        line: 287
        character: 50
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '4'
      - $ref
    severity: 2
    range:
      start:
        line: 287
        character: 16
      end:
        line: 287
        character: 50
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '5'
    severity: 1
    range:
      start:
        line: 288
        character: 10
      end:
        line: 288
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - parameters
      - '5'
      - $ref
    severity: 2
    range:
      start:
        line: 288
        character: 16
      end:
        line: 288
        character: 46
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
    severity: 0
    range:
      start:
        line: 289
        character: 16
      end:
        line: 305
        character: 50
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
    severity: 0
    range:
      start:
        line: 289
        character: 16
      end:
        line: 305
        character: 50
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
    severity: 0
    range:
      start:
        line: 289
        character: 16
      end:
        line: 305
        character: 50
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
    severity: 0
    range:
      start:
        line: 289
        character: 16
      end:
        line: 305
        character: 50
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
    severity: 0
    range:
      start:
        line: 289
        character: 16
      end:
        line: 305
        character: 50
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 290
        character: 14
      end:
        line: 303
        character: 47
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 291
        character: 23
      end:
        line: 291
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 292
        character: 18
      end:
        line: 300
        character: 62
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 293
        character: 29
      end:
        line: 300
        character: 62
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 294
        character: 21
      end:
        line: 297
        character: 55
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 294
        character: 21
      end:
        line: 297
        character: 55
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 298
        character: 23
      end:
        line: 300
        character: 62
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/reaction-items'' does not exist'
    severity: 0
    range:
      start:
        line: 300
        character: 24
      end:
        line: 300
        character: 62
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 300
        character: 24
      end:
        line: 300
        character: 62
  - code: openapi-response-get-404-schema-ref-error
    message: GET 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - get
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 305
        character: 16
      end:
        line: 305
        character: 50
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
    severity: 0
    range:
      start:
        line: 311
        character: 9
      end:
        line: 382
        character: 30
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - summary
    severity: 2
    range:
      start:
        line: 312
        character: 15
      end:
        line: 312
        character: 51
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - summary
    severity: 2
    range:
      start:
        line: 312
        character: 15
      end:
        line: 312
        character: 51
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - description
    severity: 2
    range:
      start:
        line: 313
        character: 19
      end:
        line: 317
        character: 44
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - tags
    severity: 2
    range:
      start:
        line: 318
        character: 11
      end:
        line: 319
        character: 25
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - operationId
    severity: 0
    range:
      start:
        line: 320
        character: 19
      end:
        line: 320
        character: 53
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - operationId
    severity: 2
    range:
      start:
        line: 320
        character: 19
      end:
        line: 320
        character: 53
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - operationId
    severity: 2
    range:
      start:
        line: 320
        character: 19
      end:
        line: 320
        character: 53
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 326
        character: 10
      end:
        line: 326
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 326
        character: 16
      end:
        line: 326
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 327
        character: 10
      end:
        line: 327
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 327
        character: 16
      end:
        line: 327
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 328
        character: 10
      end:
        line: 328
        character: 52
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 328
        character: 16
      end:
        line: 328
        character: 52
  - code: openapi-request-body-on-post-info
    message: POST Requests Has a Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - requestBody
    severity: 2
    range:
      start:
        line: 329
        character: 18
      end:
        line: 356
        character: 32
  - code: openapi-request-body-content-on-post-info
    message: Request Body Content POST
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - requestBody
      - content
    severity: 2
    range:
      start:
        line: 331
        character: 16
      end:
        line: 356
        character: 32
  - code: openapi-request-body-have-application-json-info
    message: Request Body Application JSON
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - requestBody
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 332
        character: 27
      end:
        line: 356
        character: 32
  - code: openapi-request-body-have-schema-info
    message: Request Body Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 333
        character: 19
      end:
        line: 352
        character: 25
  - code: openapi-request-body-have-schema-ref-info
    message: Request Bodies Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 333
        character: 19
      end:
        line: 352
        character: 25
  - code: openapi-request-body-have-examples-info
    message: Request Bodies Have Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 353
        character: 21
      end:
        line: 356
        character: 32
  - code: openapi-request-body-have-examples-ref-info
    message: Request Bodies Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 353
        character: 21
      end:
        line: 356
        character: 32
  - code: openapi-response-post-400-status-code-error
    message: POST Responses Has 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 357
        character: 16
      end:
        line: 377
        character: 58
  - code: openapi-response-post-401-status-code-error
    message: POST Responses Has 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 357
        character: 16
      end:
        line: 377
        character: 58
  - code: openapi-response-post-403-status-code-error
    message: POST Responses Has 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 357
        character: 16
      end:
        line: 377
        character: 58
  - code: openapi-response-post-404-status-code-error
    message: POST Responses Has 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 357
        character: 16
      end:
        line: 377
        character: 58
  - code: openapi-response-post-429-status-code-error
    message: POST Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 357
        character: 16
      end:
        line: 377
        character: 58
  - code: openapi-response-post-500-status-code-error
    message: POST Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 357
        character: 16
      end:
        line: 377
        character: 58
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/reaction'' does not exist'
    severity: 0
    range:
      start:
        line: 366
        character: 24
      end:
        line: 366
        character: 56
  - code: openapi-response-post-201-status-code-info
    message: POST Responses Has 201 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
      - '201'
    severity: 2
    range:
      start:
        line: 367
        character: 14
      end:
        line: 375
        character: 56
  - code: openapi-response-post-201-description-info
    message: POST 201 Responses Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
      - '201'
      - description
    severity: 2
    range:
      start:
        line: 368
        character: 23
      end:
        line: 368
        character: 39
  - code: openapi-response-post-201-content-info
    message: POST 201 Responses Has Content
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
      - '201'
      - content
    severity: 2
    range:
      start:
        line: 369
        character: 18
      end:
        line: 375
        character: 56
  - code: openapi-response-post-201-media-type-info
    message: POST 201 Responses Has Media Type
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
      - '201'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 370
        character: 29
      end:
        line: 375
        character: 56
  - code: openapi-response-post-201-media-type-schema-info
    message: POST 201 Responses Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
      - '201'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 371
        character: 21
      end:
        line: 372
        character: 53
  - code: openapi-response-post-201-schema-ref-info
    message: POST 201 Responses Has Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
      - '201'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 371
        character: 21
      end:
        line: 372
        character: 53
  - code: openapi-response-post-201-examples-ref-info
    message: POST 201 Responses Has Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
      - '201'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 373
        character: 23
      end:
        line: 375
        character: 56
  - code: openapi-response-post-201-media-type-examples-info
    message: POST 201 Responses Has Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions
      - post
      - responses
      - '201'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 373
        character: 23
      end:
        line: 375
        character: 56
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
    severity: 0
    range:
      start:
        line: 383
        character: 77
      end:
        line: 413
        character: 30
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
    severity: 2
    range:
      start:
        line: 383
        character: 77
      end:
        line: 413
        character: 30
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
    severity: 2
    range:
      start:
        line: 383
        character: 77
      end:
        line: 413
        character: 30
  - code: openapi-no-request-body-on-delete-info
    message: DELETE Request Body
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
    severity: 2
    range:
      start:
        line: 384
        character: 11
      end:
        line: 413
        character: 30
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
    severity: 0
    range:
      start:
        line: 384
        character: 11
      end:
        line: 413
        character: 30
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 385
        character: 15
      end:
        line: 385
        character: 47
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 385
        character: 15
      end:
        line: 385
        character: 47
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - description
    severity: 2
    range:
      start:
        line: 386
        character: 19
      end:
        line: 393
        character: 106
  - code: openapi-operations-description-length-error
    message: Operation Description MUST Be Less Than 250 Characters
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - description
    severity: 1
    range:
      start:
        line: 386
        character: 19
      end:
        line: 393
        character: 106
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - tags
    severity: 2
    range:
      start:
        line: 394
        character: 11
      end:
        line: 395
        character: 25
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - operationId
    severity: 0
    range:
      start:
        line: 396
        character: 19
      end:
        line: 396
        character: 53
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 396
        character: 19
      end:
        line: 396
        character: 53
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 396
        character: 19
      end:
        line: 396
        character: 53
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 402
        character: 10
      end:
        line: 402
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 402
        character: 16
      end:
        line: 402
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 403
        character: 10
      end:
        line: 403
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 403
        character: 16
      end:
        line: 403
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 404
        character: 10
      end:
        line: 404
        character: 52
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 404
        character: 16
      end:
        line: 404
        character: 52
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - parameters
      - '3'
    severity: 1
    range:
      start:
        line: 405
        character: 10
      end:
        line: 405
        character: 53
  - code: invalid-ref
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - parameters
      - '3'
      - $ref
    message: '''#/components/parameters/reaction-id'' does not exist'
    severity: 0
    range:
      start:
        line: 405
        character: 16
      end:
        line: 405
        character: 53
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - parameters
      - '3'
      - $ref
    severity: 2
    range:
      start:
        line: 405
        character: 16
      end:
        line: 405
        character: 53
  - code: openapi-response-delete-400-status-code-error
    message: DELETE Responses MUST Have 400 Status Codes
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 406
        character: 16
      end:
        line: 408
        character: 31
  - code: openapi-response-delete-401-status-code-error
    message: DELETE Responses MUST Have 401 Status Codes
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 406
        character: 16
      end:
        line: 408
        character: 31
  - code: openapi-response-delete-403-status-code-error
    message: DELETE Responses MUST Have 403 Status Codes
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 406
        character: 16
      end:
        line: 408
        character: 31
  - code: openapi-response-delete-404-status-code-error
    message: DELETE Responses MUST Have 404 Status Codes
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 406
        character: 16
      end:
        line: 408
        character: 31
  - code: openapi-response-delete-429-status-code-error
    message: DELETE Responses MUST Have 429 Status Codes
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 406
        character: 16
      end:
        line: 408
        character: 31
  - code: openapi-response-delete-500-status-code-error
    message: DELETE Responses MUST Have 500 Status Codes
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 406
        character: 16
      end:
        line: 408
        character: 31
  - code: openapi-response-delete-204-status-code-info
    message: DELETE 204 Status Code
    path:
      - paths
      - >-
        /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}
      - delete
      - responses
      - '204'
    severity: 2
    range:
      start:
        line: 407
        character: 14
      end:
        line: 408
        character: 31
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
    severity: 0
    range:
      start:
        line: 414
        character: 38
      end:
        line: 451
        character: 27
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
    severity: 2
    range:
      start:
        line: 414
        character: 38
      end:
        line: 451
        character: 27
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
    severity: 2
    range:
      start:
        line: 414
        character: 38
      end:
        line: 451
        character: 27
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
    severity: 2
    range:
      start:
        line: 415
        character: 8
      end:
        line: 451
        character: 27
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
    severity: 0
    range:
      start:
        line: 415
        character: 8
      end:
        line: 451
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - summary
    severity: 2
    range:
      start:
        line: 416
        character: 15
      end:
        line: 416
        character: 49
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - summary
    severity: 2
    range:
      start:
        line: 416
        character: 15
      end:
        line: 416
        character: 49
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - description
    severity: 2
    range:
      start:
        line: 417
        character: 19
      end:
        line: 417
        character: 49
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - tags
    severity: 2
    range:
      start:
        line: 418
        character: 11
      end:
        line: 419
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 420
        character: 19
      end:
        line: 420
        character: 46
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 420
        character: 19
      end:
        line: 420
        character: 46
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 420
        character: 19
      end:
        line: 420
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 426
        character: 10
      end:
        line: 426
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 426
        character: 16
      end:
        line: 426
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 427
        character: 10
      end:
        line: 427
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 427
        character: 16
      end:
        line: 427
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 428
        character: 10
      end:
        line: 428
        character: 50
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 428
        character: 16
      end:
        line: 428
        character: 50
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - parameters
      - '3'
    severity: 1
    range:
      start:
        line: 429
        character: 10
      end:
        line: 429
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - parameters
      - '3'
      - $ref
    severity: 2
    range:
      start:
        line: 429
        character: 16
      end:
        line: 429
        character: 46
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
    severity: 0
    range:
      start:
        line: 430
        character: 16
      end:
        line: 446
        character: 58
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
    severity: 0
    range:
      start:
        line: 430
        character: 16
      end:
        line: 446
        character: 58
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
    severity: 0
    range:
      start:
        line: 430
        character: 16
      end:
        line: 446
        character: 58
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
    severity: 0
    range:
      start:
        line: 430
        character: 16
      end:
        line: 446
        character: 58
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
    severity: 0
    range:
      start:
        line: 430
        character: 16
      end:
        line: 446
        character: 58
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 431
        character: 14
      end:
        line: 444
        character: 47
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 432
        character: 23
      end:
        line: 432
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 433
        character: 18
      end:
        line: 441
        character: 65
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 434
        character: 29
      end:
        line: 441
        character: 65
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 435
        character: 21
      end:
        line: 438
        character: 58
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 435
        character: 21
      end:
        line: 438
        character: 58
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 439
        character: 23
      end:
        line: 441
        character: 65
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/issue-event-items'' does not exist'
    severity: 0
    range:
      start:
        line: 441
        character: 24
      end:
        line: 441
        character: 65
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 441
        character: 24
      end:
        line: 441
        character: 65
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
    severity: 0
    range:
      start:
        line: 452
        character: 49
      end:
        line: 491
        character: 27
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
    severity: 2
    range:
      start:
        line: 452
        character: 49
      end:
        line: 491
        character: 27
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
    severity: 2
    range:
      start:
        line: 452
        character: 49
      end:
        line: 491
        character: 27
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
    severity: 2
    range:
      start:
        line: 453
        character: 8
      end:
        line: 491
        character: 27
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
    severity: 0
    range:
      start:
        line: 453
        character: 8
      end:
        line: 491
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - summary
    severity: 2
    range:
      start:
        line: 454
        character: 15
      end:
        line: 454
        character: 33
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - summary
    severity: 2
    range:
      start:
        line: 454
        character: 15
      end:
        line: 454
        character: 33
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - description
    severity: 2
    range:
      start:
        line: 455
        character: 19
      end:
        line: 455
        character: 55
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - tags
    severity: 2
    range:
      start:
        line: 456
        character: 11
      end:
        line: 457
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 458
        character: 19
      end:
        line: 458
        character: 35
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 458
        character: 19
      end:
        line: 458
        character: 35
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 458
        character: 19
      end:
        line: 458
        character: 35
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 464
        character: 10
      end:
        line: 464
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 464
        character: 16
      end:
        line: 464
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 465
        character: 10
      end:
        line: 465
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 465
        character: 16
      end:
        line: 465
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 466
        character: 10
      end:
        line: 470
        character: 25
  - code: openapi-parameters-componentized-error
    message: Parameters MUST use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - parameters
      - '2'
    severity: 0
    range:
      start:
        line: 466
        character: 10
      end:
        line: 470
        character: 25
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 471
        character: 16
      end:
        line: 486
        character: 45
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 471
        character: 16
      end:
        line: 486
        character: 45
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 471
        character: 16
      end:
        line: 486
        character: 45
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 471
        character: 16
      end:
        line: 486
        character: 45
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 472
        character: 14
      end:
        line: 480
        character: 59
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 473
        character: 23
      end:
        line: 473
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 474
        character: 18
      end:
        line: 480
        character: 59
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 475
        character: 29
      end:
        line: 480
        character: 59
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 476
        character: 21
      end:
        line: 477
        character: 56
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 476
        character: 21
      end:
        line: 477
        character: 56
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 478
        character: 23
      end:
        line: 480
        character: 59
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/issue-event'' does not exist'
    severity: 0
    range:
      start:
        line: 480
        character: 24
      end:
        line: 480
        character: 59
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 480
        character: 24
      end:
        line: 480
        character: 59
  - code: openapi-response-get-403-status-code-info
    message: GET Responses MUST Have 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '403'
    severity: 2
    range:
      start:
        line: 481
        character: 14
      end:
        line: 482
        character: 50
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '403'
      - $ref
    message: '''#/components/responses/forbidden'' does not exist'
    severity: 0
    range:
      start:
        line: 482
        character: 16
      end:
        line: 482
        character: 50
  - code: openapi-response-get-403-schema-ref-error
    message: GET 403 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '403'
      - $ref
    severity: 0
    range:
      start:
        line: 482
        character: 16
      end:
        line: 482
        character: 50
  - code: openapi-response-get-404-schema-ref-error
    message: GET 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 484
        character: 16
      end:
        line: 484
        character: 50
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/events/{event_id}
      - get
      - responses
      - '410'
      - $ref
    message: '''#/components/responses/gone'' does not exist'
    severity: 0
    range:
      start:
        line: 486
        character: 16
      end:
        line: 486
        character: 45
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
    severity: 0
    range:
      start:
        line: 492
        character: 46
      end:
        line: 742
        character: 27
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
    severity: 2
    range:
      start:
        line: 492
        character: 46
      end:
        line: 742
        character: 27
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
    severity: 2
    range:
      start:
        line: 492
        character: 46
      end:
        line: 742
        character: 27
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
    severity: 2
    range:
      start:
        line: 493
        character: 8
      end:
        line: 583
        character: 27
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
    severity: 0
    range:
      start:
        line: 493
        character: 8
      end:
        line: 583
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - summary
    severity: 2
    range:
      start:
        line: 494
        character: 15
      end:
        line: 494
        character: 27
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - summary
    severity: 2
    range:
      start:
        line: 494
        character: 15
      end:
        line: 494
        character: 27
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - description
    severity: 2
    range:
      start:
        line: 495
        character: 19
      end:
        line: 549
        character: 20
  - code: openapi-operations-description-length-error
    message: Operation Description MUST Be Less Than 250 Characters
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - description
    severity: 1
    range:
      start:
        line: 495
        character: 19
      end:
        line: 549
        character: 20
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - tags
    severity: 2
    range:
      start:
        line: 550
        character: 11
      end:
        line: 551
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 552
        character: 19
      end:
        line: 552
        character: 29
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 552
        character: 19
      end:
        line: 552
        character: 29
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 552
        character: 19
      end:
        line: 552
        character: 29
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 558
        character: 10
      end:
        line: 558
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 558
        character: 16
      end:
        line: 558
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 559
        character: 10
      end:
        line: 559
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 559
        character: 16
      end:
        line: 559
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 560
        character: 10
      end:
        line: 560
        character: 54
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - parameters
      - '2'
      - $ref
    message: '''#/components/parameters/issue-number'' does not exist'
    severity: 0
    range:
      start:
        line: 560
        character: 16
      end:
        line: 560
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 560
        character: 16
      end:
        line: 560
        character: 54
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 561
        character: 16
      end:
        line: 578
        character: 45
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 561
        character: 16
      end:
        line: 578
        character: 45
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 561
        character: 16
      end:
        line: 578
        character: 45
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 561
        character: 16
      end:
        line: 578
        character: 45
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 561
        character: 16
      end:
        line: 578
        character: 45
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 562
        character: 14
      end:
        line: 570
        character: 53
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 563
        character: 23
      end:
        line: 563
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 564
        character: 18
      end:
        line: 570
        character: 53
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 565
        character: 29
      end:
        line: 570
        character: 53
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 566
        character: 21
      end:
        line: 567
        character: 50
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 566
        character: 21
      end:
        line: 567
        character: 50
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 568
        character: 23
      end:
        line: 570
        character: 53
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/issue'' does not exist'
    severity: 0
    range:
      start:
        line: 570
        character: 24
      end:
        line: 570
        character: 53
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 570
        character: 24
      end:
        line: 570
        character: 53
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '301'
      - $ref
    message: '''#/components/responses/moved_permanently'' does not exist'
    severity: 0
    range:
      start:
        line: 572
        character: 16
      end:
        line: 572
        character: 58
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '304'
      - $ref
    message: '''#/components/responses/not_modified'' does not exist'
    severity: 0
    range:
      start:
        line: 574
        character: 16
      end:
        line: 574
        character: 53
  - code: openapi-response-get-404-schema-ref-error
    message: GET 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - get
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 576
        character: 16
      end:
        line: 576
        character: 50
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
    severity: 0
    range:
      start:
        line: 584
        character: 10
      end:
        line: 742
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - summary
    severity: 2
    range:
      start:
        line: 585
        character: 15
      end:
        line: 585
        character: 30
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - summary
    severity: 2
    range:
      start:
        line: 585
        character: 15
      end:
        line: 585
        character: 30
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - description
    severity: 2
    range:
      start:
        line: 586
        character: 19
      end:
        line: 607
        character: 20
  - code: openapi-operations-description-length-error
    message: Operation Description MUST Be Less Than 250 Characters
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - description
    severity: 1
    range:
      start:
        line: 586
        character: 19
      end:
        line: 607
        character: 20
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - tags
    severity: 2
    range:
      start:
        line: 608
        character: 11
      end:
        line: 609
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - operationId
    severity: 0
    range:
      start:
        line: 610
        character: 19
      end:
        line: 610
        character: 32
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - operationId
    severity: 2
    range:
      start:
        line: 610
        character: 19
      end:
        line: 610
        character: 32
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - operationId
    severity: 2
    range:
      start:
        line: 610
        character: 19
      end:
        line: 610
        character: 32
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 616
        character: 10
      end:
        line: 616
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 616
        character: 16
      end:
        line: 616
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 617
        character: 10
      end:
        line: 617
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 617
        character: 16
      end:
        line: 617
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 618
        character: 10
      end:
        line: 618
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 618
        character: 16
      end:
        line: 618
        character: 54
  - code: openapi-request-body-have-application-json-info
    message: Request Body Application JSON
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - requestBody
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 622
        character: 27
      end:
        line: 715
        character: 25
  - code: openapi-request-body-have-schema-info
    message: Request Body Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 623
        character: 19
      end:
        line: 704
        character: 32
  - code: openapi-request-body-have-schema-ref-info
    message: Request Bodies Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 623
        character: 19
      end:
        line: 704
        character: 32
  - code: openapi-request-body-have-examples-info
    message: Request Bodies Have Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 705
        character: 21
      end:
        line: 715
        character: 25
  - code: openapi-request-body-have-examples-ref-info
    message: Request Bodies Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 705
        character: 21
      end:
        line: 715
        character: 25
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}
      - patch
      - responses
      - '503'
      - $ref
    message: '''#/components/responses/service_unavailable'' does not exist'
    severity: 0
    range:
      start:
        line: 737
        character: 16
      end:
        line: 737
        character: 60
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
    severity: 0
    range:
      start:
        line: 743
        character: 56
      end:
        line: 844
        character: 30
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
    severity: 2
    range:
      start:
        line: 743
        character: 56
      end:
        line: 844
        character: 30
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
    severity: 2
    range:
      start:
        line: 743
        character: 56
      end:
        line: 844
        character: 30
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
    severity: 0
    range:
      start:
        line: 744
        character: 9
      end:
        line: 795
        character: 30
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - summary
    severity: 2
    range:
      start:
        line: 745
        character: 15
      end:
        line: 745
        character: 40
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - summary
    severity: 2
    range:
      start:
        line: 745
        character: 15
      end:
        line: 745
        character: 40
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - description
    severity: 2
    range:
      start:
        line: 746
        character: 19
      end:
        line: 748
        character: 25
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - tags
    severity: 2
    range:
      start:
        line: 749
        character: 11
      end:
        line: 750
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - operationId
    severity: 0
    range:
      start:
        line: 751
        character: 19
      end:
        line: 751
        character: 39
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - operationId
    severity: 2
    range:
      start:
        line: 751
        character: 19
      end:
        line: 751
        character: 39
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - operationId
    severity: 2
    range:
      start:
        line: 751
        character: 19
      end:
        line: 751
        character: 39
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 757
        character: 10
      end:
        line: 757
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 757
        character: 16
      end:
        line: 757
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 758
        character: 10
      end:
        line: 758
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 758
        character: 16
      end:
        line: 758
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 759
        character: 10
      end:
        line: 759
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 759
        character: 16
      end:
        line: 759
        character: 54
  - code: openapi-request-body-on-post-info
    message: POST Requests Has a Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - requestBody
    severity: 2
    range:
      start:
        line: 760
        character: 18
      end:
        line: 780
        character: 32
  - code: openapi-request-body-content-on-post-info
    message: Request Body Content POST
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - requestBody
      - content
    severity: 2
    range:
      start:
        line: 762
        character: 16
      end:
        line: 780
        character: 32
  - code: openapi-request-body-have-application-json-info
    message: Request Body Application JSON
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - requestBody
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 763
        character: 27
      end:
        line: 780
        character: 32
  - code: openapi-request-body-have-schema-info
    message: Request Body Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 764
        character: 19
      end:
        line: 774
        character: 32
  - code: openapi-request-body-have-schema-ref-info
    message: Request Bodies Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 764
        character: 19
      end:
        line: 774
        character: 32
  - code: openapi-request-body-have-examples-info
    message: Request Bodies Have Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 775
        character: 21
      end:
        line: 780
        character: 32
  - code: openapi-request-body-have-examples-ref-info
    message: Request Bodies Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 775
        character: 21
      end:
        line: 780
        character: 32
  - code: openapi-response-post-400-status-code-error
    message: POST Responses Has 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
    severity: 0
    range:
      start:
        line: 781
        character: 16
      end:
        line: 790
        character: 53
  - code: openapi-response-post-401-status-code-error
    message: POST Responses Has 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
    severity: 0
    range:
      start:
        line: 781
        character: 16
      end:
        line: 790
        character: 53
  - code: openapi-response-post-403-status-code-error
    message: POST Responses Has 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
    severity: 0
    range:
      start:
        line: 781
        character: 16
      end:
        line: 790
        character: 53
  - code: openapi-response-post-404-status-code-error
    message: POST Responses Has 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
    severity: 0
    range:
      start:
        line: 781
        character: 16
      end:
        line: 790
        character: 53
  - code: openapi-response-post-429-status-code-error
    message: POST Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
    severity: 0
    range:
      start:
        line: 781
        character: 16
      end:
        line: 790
        character: 53
  - code: openapi-response-post-500-status-code-error
    message: POST Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
    severity: 0
    range:
      start:
        line: 781
        character: 16
      end:
        line: 790
        character: 53
  - code: openapi-response-post-201-status-code-info
    message: POST Responses Has 201 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
      - '201'
    severity: 2
    range:
      start:
        line: 782
        character: 14
      end:
        line: 790
        character: 53
  - code: openapi-response-post-201-description-info
    message: POST 201 Responses Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
      - '201'
      - description
    severity: 2
    range:
      start:
        line: 783
        character: 23
      end:
        line: 783
        character: 31
  - code: openapi-response-post-201-content-info
    message: POST 201 Responses Has Content
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
      - '201'
      - content
    severity: 2
    range:
      start:
        line: 784
        character: 18
      end:
        line: 790
        character: 53
  - code: openapi-response-post-201-media-type-info
    message: POST 201 Responses Has Media Type
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
      - '201'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 785
        character: 29
      end:
        line: 790
        character: 53
  - code: openapi-response-post-201-media-type-schema-info
    message: POST 201 Responses Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
      - '201'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 786
        character: 21
      end:
        line: 787
        character: 50
  - code: openapi-response-post-201-schema-ref-info
    message: POST 201 Responses Has Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
      - '201'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 786
        character: 21
      end:
        line: 787
        character: 50
  - code: openapi-response-post-201-examples-ref-info
    message: POST 201 Responses Has Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
      - '201'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 788
        character: 23
      end:
        line: 790
        character: 53
  - code: openapi-response-post-201-media-type-examples-info
    message: POST 201 Responses Has Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - post
      - responses
      - '201'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 788
        character: 23
      end:
        line: 790
        character: 53
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
    severity: 0
    range:
      start:
        line: 796
        character: 11
      end:
        line: 844
        character: 30
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 797
        character: 15
      end:
        line: 797
        character: 45
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 797
        character: 15
      end:
        line: 797
        character: 45
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - description
    severity: 2
    range:
      start:
        line: 798
        character: 19
      end:
        line: 798
        character: 63
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - tags
    severity: 2
    range:
      start:
        line: 799
        character: 11
      end:
        line: 800
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - operationId
    severity: 0
    range:
      start:
        line: 801
        character: 19
      end:
        line: 801
        character: 42
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 801
        character: 19
      end:
        line: 801
        character: 42
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 801
        character: 19
      end:
        line: 801
        character: 42
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 807
        character: 10
      end:
        line: 807
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 807
        character: 16
      end:
        line: 807
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 808
        character: 10
      end:
        line: 808
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 808
        character: 16
      end:
        line: 808
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 809
        character: 10
      end:
        line: 809
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 809
        character: 16
      end:
        line: 809
        character: 54
  - code: openapi-no-request-body-on-delete-error
    message: DELETE Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - requestBody
    severity: 0
    range:
      start:
        line: 810
        character: 18
      end:
        line: 829
        character: 32
  - code: openapi-request-body-have-application-json-info
    message: Request Body Application JSON
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - requestBody
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 812
        character: 27
      end:
        line: 829
        character: 32
  - code: openapi-request-body-have-schema-info
    message: Request Body Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 813
        character: 19
      end:
        line: 823
        character: 32
  - code: openapi-request-body-have-schema-ref-info
    message: Request Bodies Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 813
        character: 19
      end:
        line: 823
        character: 32
  - code: openapi-request-body-have-examples-info
    message: Request Bodies Have Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 824
        character: 21
      end:
        line: 829
        character: 32
  - code: openapi-request-body-have-examples-ref-info
    message: Request Bodies Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 824
        character: 21
      end:
        line: 829
        character: 32
  - code: openapi-response-delete-204-status-code-error
    message: DELETE 204 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - responses
    severity: 2
    range:
      start:
        line: 830
        character: 16
      end:
        line: 839
        character: 53
  - code: openapi-response-delete-400-status-code-error
    message: DELETE Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 830
        character: 16
      end:
        line: 839
        character: 53
  - code: openapi-response-delete-401-status-code-error
    message: DELETE Responses MUST Have 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 830
        character: 16
      end:
        line: 839
        character: 53
  - code: openapi-response-delete-403-status-code-error
    message: DELETE Responses MUST Have 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 830
        character: 16
      end:
        line: 839
        character: 53
  - code: openapi-response-delete-404-status-code-error
    message: DELETE Responses MUST Have 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 830
        character: 16
      end:
        line: 839
        character: 53
  - code: openapi-response-delete-429-status-code-error
    message: DELETE Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 830
        character: 16
      end:
        line: 839
        character: 53
  - code: openapi-response-delete-500-status-code-error
    message: DELETE Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 830
        character: 16
      end:
        line: 839
        character: 53
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
    severity: 0
    range:
      start:
        line: 845
        character: 67
      end:
        line: 886
        character: 30
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
    severity: 2
    range:
      start:
        line: 845
        character: 67
      end:
        line: 886
        character: 30
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
    severity: 2
    range:
      start:
        line: 845
        character: 67
      end:
        line: 886
        character: 30
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
    severity: 2
    range:
      start:
        line: 846
        character: 8
      end:
        line: 886
        character: 30
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
    severity: 0
    range:
      start:
        line: 846
        character: 8
      end:
        line: 886
        character: 30
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - summary
    severity: 2
    range:
      start:
        line: 847
        character: 15
      end:
        line: 847
        character: 57
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - summary
    severity: 2
    range:
      start:
        line: 847
        character: 15
      end:
        line: 847
        character: 57
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - description
    severity: 2
    range:
      start:
        line: 848
        character: 19
      end:
        line: 856
        character: 50
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - tags
    severity: 2
    range:
      start:
        line: 857
        character: 11
      end:
        line: 858
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 859
        character: 19
      end:
        line: 859
        character: 61
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 859
        character: 19
      end:
        line: 859
        character: 61
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 859
        character: 19
      end:
        line: 859
        character: 61
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 865
        character: 10
      end:
        line: 865
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 865
        character: 16
      end:
        line: 865
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 866
        character: 10
      end:
        line: 866
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 866
        character: 16
      end:
        line: 866
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 867
        character: 10
      end:
        line: 867
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 867
        character: 16
      end:
        line: 867
        character: 54
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - parameters
      - '3'
    severity: 1
    range:
      start:
        line: 868
        character: 10
      end:
        line: 872
        character: 24
  - code: openapi-parameters-componentized-error
    message: Parameters MUST use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - parameters
      - '3'
    severity: 0
    range:
      start:
        line: 868
        character: 10
      end:
        line: 872
        character: 24
  - code: openapi-response-get-200-status-code-error
    message: GET Responses MUST Have 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 873
        character: 16
      end:
        line: 881
        character: 56
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 873
        character: 16
      end:
        line: 881
        character: 56
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 873
        character: 16
      end:
        line: 881
        character: 56
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 873
        character: 16
      end:
        line: 881
        character: 56
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 873
        character: 16
      end:
        line: 881
        character: 56
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - responses
    severity: 0
    range:
      start:
        line: 873
        character: 16
      end:
        line: 881
        character: 56
  - code: openapi-response-get-404-schema-ref-info
    message: GET 404 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - responses
      - '404'
    severity: 2
    range:
      start:
        line: 876
        character: 14
      end:
        line: 881
        character: 56
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}
      - get
      - responses
      - '404'
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/basic-error'' does not exist'
    severity: 0
    range:
      start:
        line: 881
        character: 22
      end:
        line: 881
        character: 56
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
    severity: 0
    range:
      start:
        line: 887
        character: 55
      end:
        line: 1048
        character: 29
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
    severity: 2
    range:
      start:
        line: 887
        character: 55
      end:
        line: 1048
        character: 29
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
    severity: 2
    range:
      start:
        line: 887
        character: 55
      end:
        line: 1048
        character: 29
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
    severity: 2
    range:
      start:
        line: 888
        character: 8
      end:
        line: 953
        character: 29
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
    severity: 0
    range:
      start:
        line: 888
        character: 8
      end:
        line: 953
        character: 29
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - summary
    severity: 2
    range:
      start:
        line: 889
        character: 15
      end:
        line: 889
        character: 34
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - summary
    severity: 2
    range:
      start:
        line: 889
        character: 15
      end:
        line: 889
        character: 34
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - description
    severity: 2
    range:
      start:
        line: 890
        character: 19
      end:
        line: 915
        character: 20
  - code: openapi-operations-description-length-error
    message: Operation Description MUST Be Less Than 250 Characters
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - description
    severity: 1
    range:
      start:
        line: 890
        character: 19
      end:
        line: 915
        character: 20
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - tags
    severity: 2
    range:
      start:
        line: 916
        character: 11
      end:
        line: 917
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 918
        character: 19
      end:
        line: 918
        character: 39
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 918
        character: 19
      end:
        line: 918
        character: 39
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 918
        character: 19
      end:
        line: 918
        character: 39
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 924
        character: 10
      end:
        line: 924
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 924
        character: 16
      end:
        line: 924
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 925
        character: 10
      end:
        line: 925
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 925
        character: 16
      end:
        line: 925
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 926
        character: 10
      end:
        line: 926
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 926
        character: 16
      end:
        line: 926
        character: 54
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '3'
    severity: 1
    range:
      start:
        line: 927
        character: 10
      end:
        line: 927
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '3'
      - $ref
    severity: 2
    range:
      start:
        line: 927
        character: 16
      end:
        line: 927
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '4'
    severity: 1
    range:
      start:
        line: 928
        character: 10
      end:
        line: 928
        character: 50
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '4'
      - $ref
    severity: 2
    range:
      start:
        line: 928
        character: 16
      end:
        line: 928
        character: 50
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '5'
    severity: 1
    range:
      start:
        line: 929
        character: 10
      end:
        line: 929
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - parameters
      - '5'
      - $ref
    severity: 2
    range:
      start:
        line: 929
        character: 16
      end:
        line: 929
        character: 46
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
    severity: 0
    range:
      start:
        line: 930
        character: 16
      end:
        line: 948
        character: 45
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
    severity: 0
    range:
      start:
        line: 930
        character: 16
      end:
        line: 948
        character: 45
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
    severity: 0
    range:
      start:
        line: 930
        character: 16
      end:
        line: 948
        character: 45
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
    severity: 0
    range:
      start:
        line: 930
        character: 16
      end:
        line: 948
        character: 45
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
    severity: 0
    range:
      start:
        line: 930
        character: 16
      end:
        line: 948
        character: 45
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 931
        character: 14
      end:
        line: 944
        character: 47
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 932
        character: 23
      end:
        line: 932
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 933
        character: 18
      end:
        line: 941
        character: 67
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 934
        character: 29
      end:
        line: 941
        character: 67
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 935
        character: 21
      end:
        line: 938
        character: 60
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 935
        character: 21
      end:
        line: 938
        character: 60
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 939
        character: 23
      end:
        line: 941
        character: 67
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 941
        character: 24
      end:
        line: 941
        character: 67
  - code: openapi-response-get-404-schema-ref-error
    message: GET 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - get
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 946
        character: 16
      end:
        line: 946
        character: 50
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
    severity: 0
    range:
      start:
        line: 954
        character: 9
      end:
        line: 1048
        character: 29
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - summary
    severity: 2
    range:
      start:
        line: 955
        character: 15
      end:
        line: 955
        character: 38
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - summary
    severity: 2
    range:
      start:
        line: 955
        character: 15
      end:
        line: 955
        character: 38
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - description
    severity: 2
    range:
      start:
        line: 956
        character: 19
      end:
        line: 991
        character: 20
  - code: openapi-operations-description-length-error
    message: Operation Description MUST Be Less Than 250 Characters
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - description
    severity: 1
    range:
      start:
        line: 956
        character: 19
      end:
        line: 991
        character: 20
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - tags
    severity: 2
    range:
      start:
        line: 992
        character: 11
      end:
        line: 993
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - operationId
    severity: 0
    range:
      start:
        line: 994
        character: 19
      end:
        line: 994
        character: 40
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - operationId
    severity: 2
    range:
      start:
        line: 994
        character: 19
      end:
        line: 994
        character: 40
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - operationId
    severity: 2
    range:
      start:
        line: 994
        character: 19
      end:
        line: 994
        character: 40
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1000
        character: 10
      end:
        line: 1000
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1000
        character: 16
      end:
        line: 1000
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1001
        character: 10
      end:
        line: 1001
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1001
        character: 16
      end:
        line: 1001
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1002
        character: 10
      end:
        line: 1002
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1002
        character: 16
      end:
        line: 1002
        character: 54
  - code: openapi-request-body-on-post-info
    message: POST Requests Has a Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - requestBody
    severity: 2
    range:
      start:
        line: 1003
        character: 18
      end:
        line: 1018
        character: 30
  - code: openapi-request-body-content-on-post-info
    message: Request Body Content POST
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - requestBody
      - content
    severity: 2
    range:
      start:
        line: 1005
        character: 16
      end:
        line: 1018
        character: 30
  - code: openapi-request-body-have-application-json-info
    message: Request Body Application JSON
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - requestBody
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1006
        character: 27
      end:
        line: 1018
        character: 30
  - code: openapi-request-body-have-schema-info
    message: Request Body Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1007
        character: 19
      end:
        line: 1014
        character: 22
  - code: openapi-request-body-have-schema-ref-info
    message: Request Bodies Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1007
        character: 19
      end:
        line: 1014
        character: 22
  - code: openapi-request-body-have-examples-info
    message: Request Bodies Have Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1015
        character: 21
      end:
        line: 1018
        character: 30
  - code: openapi-request-body-have-examples-ref-info
    message: Request Bodies Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1015
        character: 21
      end:
        line: 1018
        character: 30
  - code: openapi-response-post-400-status-code-error
    message: POST Responses Has 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1019
        character: 16
      end:
        line: 1042
        character: 58
  - code: openapi-response-post-401-status-code-error
    message: POST Responses Has 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1019
        character: 16
      end:
        line: 1042
        character: 58
  - code: openapi-response-post-429-status-code-error
    message: POST Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1019
        character: 16
      end:
        line: 1042
        character: 58
  - code: openapi-response-post-500-status-code-error
    message: POST Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1019
        character: 16
      end:
        line: 1042
        character: 58
  - code: openapi-response-post-201-status-code-info
    message: POST Responses Has 201 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '201'
    severity: 2
    range:
      start:
        line: 1020
        character: 14
      end:
        line: 1034
        character: 28
  - code: openapi-response-post-201-description-info
    message: POST 201 Responses Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '201'
      - description
    severity: 2
    range:
      start:
        line: 1021
        character: 23
      end:
        line: 1021
        character: 31
  - code: openapi-response-post-201-content-info
    message: POST 201 Responses Has Content
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '201'
      - content
    severity: 2
    range:
      start:
        line: 1022
        character: 18
      end:
        line: 1028
        character: 61
  - code: openapi-response-post-201-media-type-info
    message: POST 201 Responses Has Media Type
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '201'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1023
        character: 29
      end:
        line: 1028
        character: 61
  - code: openapi-response-post-201-media-type-schema-info
    message: POST 201 Responses Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '201'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1024
        character: 21
      end:
        line: 1025
        character: 58
  - code: openapi-response-post-201-schema-ref-info
    message: POST 201 Responses Has Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '201'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1024
        character: 21
      end:
        line: 1025
        character: 58
  - code: openapi-response-post-201-examples-ref-info
    message: POST 201 Responses Has Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '201'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1026
        character: 23
      end:
        line: 1028
        character: 61
  - code: openapi-response-post-201-media-type-examples-info
    message: POST 201 Responses Has Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '201'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1026
        character: 23
      end:
        line: 1028
        character: 61
  - code: openapi-response-post-403-status-code-info
    message: POST Responses MUST Have 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '403'
    severity: 2
    range:
      start:
        line: 1035
        character: 14
      end:
        line: 1036
        character: 50
  - code: openapi-response-post-403-schema-ref-error
    message: POST 403 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '403'
      - $ref
    severity: 0
    range:
      start:
        line: 1036
        character: 16
      end:
        line: 1036
        character: 50
  - code: openapi-response-post-404-status-code-info
    message: POST Responses MUST Have 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '404'
    severity: 2
    range:
      start:
        line: 1037
        character: 14
      end:
        line: 1038
        character: 50
  - code: openapi-response-post-404-schema-ref-error
    message: POST 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/comments
      - post
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 1038
        character: 16
      end:
        line: 1038
        character: 50
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
    severity: 0
    range:
      start:
        line: 1049
        character: 53
      end:
        line: 1087
        character: 27
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
    severity: 2
    range:
      start:
        line: 1049
        character: 53
      end:
        line: 1087
        character: 27
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
    severity: 2
    range:
      start:
        line: 1049
        character: 53
      end:
        line: 1087
        character: 27
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
    severity: 2
    range:
      start:
        line: 1050
        character: 8
      end:
        line: 1087
        character: 27
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
    severity: 0
    range:
      start:
        line: 1050
        character: 8
      end:
        line: 1087
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - summary
    severity: 2
    range:
      start:
        line: 1051
        character: 15
      end:
        line: 1051
        character: 32
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - summary
    severity: 2
    range:
      start:
        line: 1051
        character: 15
      end:
        line: 1051
        character: 32
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - description
    severity: 2
    range:
      start:
        line: 1052
        character: 19
      end:
        line: 1052
        character: 49
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - tags
    severity: 2
    range:
      start:
        line: 1053
        character: 11
      end:
        line: 1054
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 1055
        character: 19
      end:
        line: 1055
        character: 37
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 1055
        character: 19
      end:
        line: 1055
        character: 37
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 1055
        character: 19
      end:
        line: 1055
        character: 37
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1061
        character: 10
      end:
        line: 1061
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1061
        character: 16
      end:
        line: 1061
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1062
        character: 10
      end:
        line: 1062
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1062
        character: 16
      end:
        line: 1062
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1063
        character: 10
      end:
        line: 1063
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1063
        character: 16
      end:
        line: 1063
        character: 54
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - parameters
      - '3'
    severity: 1
    range:
      start:
        line: 1064
        character: 10
      end:
        line: 1064
        character: 50
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - parameters
      - '3'
      - $ref
    severity: 2
    range:
      start:
        line: 1064
        character: 16
      end:
        line: 1064
        character: 50
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - parameters
      - '4'
    severity: 1
    range:
      start:
        line: 1065
        character: 10
      end:
        line: 1065
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - parameters
      - '4'
      - $ref
    severity: 2
    range:
      start:
        line: 1065
        character: 16
      end:
        line: 1065
        character: 46
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1066
        character: 16
      end:
        line: 1082
        character: 45
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1066
        character: 16
      end:
        line: 1082
        character: 45
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1066
        character: 16
      end:
        line: 1082
        character: 45
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1066
        character: 16
      end:
        line: 1082
        character: 45
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1066
        character: 16
      end:
        line: 1082
        character: 45
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 1067
        character: 14
      end:
        line: 1080
        character: 47
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 1068
        character: 23
      end:
        line: 1068
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 1069
        character: 18
      end:
        line: 1077
        character: 75
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1070
        character: 29
      end:
        line: 1077
        character: 75
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1071
        character: 21
      end:
        line: 1074
        character: 68
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1071
        character: 21
      end:
        line: 1074
        character: 68
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
      - items
      - $ref
    message: '''#/components/schemas/issue-event-for-issue'' does not exist'
    severity: 0
    range:
      start:
        line: 1074
        character: 24
      end:
        line: 1074
        character: 68
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1075
        character: 23
      end:
        line: 1077
        character: 75
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/issue-event-for-issue-items'' does not exist'
    severity: 0
    range:
      start:
        line: 1077
        character: 24
      end:
        line: 1077
        character: 75
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/events
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 1077
        character: 24
      end:
        line: 1077
        character: 75
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
    severity: 0
    range:
      start:
        line: 1088
        character: 53
      end:
        line: 1347
        character: 27
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
    severity: 2
    range:
      start:
        line: 1088
        character: 53
      end:
        line: 1347
        character: 27
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
    severity: 2
    range:
      start:
        line: 1088
        character: 53
      end:
        line: 1347
        character: 27
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
    severity: 2
    range:
      start:
        line: 1089
        character: 8
      end:
        line: 1130
        character: 27
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
    severity: 0
    range:
      start:
        line: 1089
        character: 8
      end:
        line: 1130
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - summary
    severity: 2
    range:
      start:
        line: 1090
        character: 15
      end:
        line: 1090
        character: 39
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - summary
    severity: 2
    range:
      start:
        line: 1090
        character: 15
      end:
        line: 1090
        character: 39
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - description
    severity: 2
    range:
      start:
        line: 1091
        character: 19
      end:
        line: 1091
        character: 49
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - tags
    severity: 2
    range:
      start:
        line: 1092
        character: 11
      end:
        line: 1093
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 1094
        character: 19
      end:
        line: 1094
        character: 46
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 1094
        character: 19
      end:
        line: 1094
        character: 46
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 1094
        character: 19
      end:
        line: 1094
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1100
        character: 10
      end:
        line: 1100
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1100
        character: 16
      end:
        line: 1100
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1101
        character: 10
      end:
        line: 1101
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1101
        character: 16
      end:
        line: 1101
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1102
        character: 10
      end:
        line: 1102
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1102
        character: 16
      end:
        line: 1102
        character: 54
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - parameters
      - '3'
    severity: 1
    range:
      start:
        line: 1103
        character: 10
      end:
        line: 1103
        character: 50
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - parameters
      - '3'
      - $ref
    severity: 2
    range:
      start:
        line: 1103
        character: 16
      end:
        line: 1103
        character: 50
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - parameters
      - '4'
    severity: 1
    range:
      start:
        line: 1104
        character: 10
      end:
        line: 1104
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - parameters
      - '4'
      - $ref
    severity: 2
    range:
      start:
        line: 1104
        character: 16
      end:
        line: 1104
        character: 46
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1105
        character: 16
      end:
        line: 1125
        character: 45
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1105
        character: 16
      end:
        line: 1125
        character: 45
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1105
        character: 16
      end:
        line: 1125
        character: 45
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1105
        character: 16
      end:
        line: 1125
        character: 45
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1105
        character: 16
      end:
        line: 1125
        character: 45
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 1106
        character: 14
      end:
        line: 1119
        character: 47
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 1107
        character: 23
      end:
        line: 1107
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 1108
        character: 18
      end:
        line: 1116
        character: 59
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1109
        character: 29
      end:
        line: 1116
        character: 59
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1110
        character: 21
      end:
        line: 1113
        character: 52
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1110
        character: 21
      end:
        line: 1113
        character: 52
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
      - items
      - $ref
    message: '''#/components/schemas/label'' does not exist'
    severity: 0
    range:
      start:
        line: 1113
        character: 24
      end:
        line: 1113
        character: 52
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1114
        character: 23
      end:
        line: 1116
        character: 59
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/label-items'' does not exist'
    severity: 0
    range:
      start:
        line: 1116
        character: 24
      end:
        line: 1116
        character: 59
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 1116
        character: 24
      end:
        line: 1116
        character: 59
  - code: openapi-response-get-404-schema-ref-error
    message: GET 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - get
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 1123
        character: 16
      end:
        line: 1123
        character: 50
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
    severity: 0
    range:
      start:
        line: 1131
        character: 9
      end:
        line: 1225
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - summary
    severity: 2
    range:
      start:
        line: 1132
        character: 15
      end:
        line: 1132
        character: 37
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - summary
    severity: 2
    range:
      start:
        line: 1132
        character: 15
      end:
        line: 1132
        character: 37
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - description
    severity: 2
    range:
      start:
        line: 1133
        character: 19
      end:
        line: 1135
        character: 43
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - tags
    severity: 2
    range:
      start:
        line: 1136
        character: 11
      end:
        line: 1137
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - operationId
    severity: 0
    range:
      start:
        line: 1138
        character: 19
      end:
        line: 1138
        character: 36
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - operationId
    severity: 2
    range:
      start:
        line: 1138
        character: 19
      end:
        line: 1138
        character: 36
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - operationId
    severity: 2
    range:
      start:
        line: 1138
        character: 19
      end:
        line: 1138
        character: 36
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1144
        character: 10
      end:
        line: 1144
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1144
        character: 16
      end:
        line: 1144
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1145
        character: 10
      end:
        line: 1145
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1145
        character: 16
      end:
        line: 1145
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1146
        character: 10
      end:
        line: 1146
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1146
        character: 16
      end:
        line: 1146
        character: 54
  - code: openapi-request-body-on-post-info
    message: POST Requests Has a Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - requestBody
    severity: 2
    range:
      start:
        line: 1147
        character: 18
      end:
        line: 1200
        character: 33
  - code: openapi-request-body-content-on-post-info
    message: Request Body Content POST
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - requestBody
      - content
    severity: 2
    range:
      start:
        line: 1149
        character: 16
      end:
        line: 1200
        character: 33
  - code: openapi-request-body-have-application-json-info
    message: Request Body Application JSON
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - requestBody
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1150
        character: 27
      end:
        line: 1200
        character: 33
  - code: openapi-request-body-have-schema-info
    message: Request Body Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1151
        character: 19
      end:
        line: 1194
        character: 30
  - code: openapi-request-body-have-schema-ref-info
    message: Request Bodies Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1151
        character: 19
      end:
        line: 1194
        character: 30
  - code: openapi-request-body-have-examples-info
    message: Request Bodies Have Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1195
        character: 21
      end:
        line: 1200
        character: 33
  - code: openapi-request-body-have-examples-ref-info
    message: Request Bodies Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1195
        character: 21
      end:
        line: 1200
        character: 33
  - code: openapi-response-post-201-status-code-error
    message: POST Responses MUST Have 201 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1201
        character: 16
      end:
        line: 1220
        character: 58
  - code: openapi-response-post-400-status-code-error
    message: POST Responses Has 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1201
        character: 16
      end:
        line: 1220
        character: 58
  - code: openapi-response-post-401-status-code-error
    message: POST Responses Has 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1201
        character: 16
      end:
        line: 1220
        character: 58
  - code: openapi-response-post-403-status-code-error
    message: POST Responses Has 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1201
        character: 16
      end:
        line: 1220
        character: 58
  - code: openapi-response-post-429-status-code-error
    message: POST Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1201
        character: 16
      end:
        line: 1220
        character: 58
  - code: openapi-response-post-500-status-code-error
    message: POST Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1201
        character: 16
      end:
        line: 1220
        character: 58
  - code: openapi-response-post-404-status-code-info
    message: POST Responses MUST Have 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - responses
      - '404'
    severity: 2
    range:
      start:
        line: 1215
        character: 14
      end:
        line: 1216
        character: 50
  - code: openapi-response-post-404-schema-ref-error
    message: POST 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - post
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 1216
        character: 16
      end:
        line: 1216
        character: 50
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
    severity: 0
    range:
      start:
        line: 1226
        character: 8
      end:
        line: 1319
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - summary
    severity: 2
    range:
      start:
        line: 1227
        character: 15
      end:
        line: 1227
        character: 38
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - summary
    severity: 2
    range:
      start:
        line: 1227
        character: 15
      end:
        line: 1227
        character: 38
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - description
    severity: 2
    range:
      start:
        line: 1228
        character: 19
      end:
        line: 1228
        character: 84
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - tags
    severity: 2
    range:
      start:
        line: 1229
        character: 11
      end:
        line: 1230
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - operationId
    severity: 0
    range:
      start:
        line: 1231
        character: 19
      end:
        line: 1231
        character: 36
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - operationId
    severity: 2
    range:
      start:
        line: 1231
        character: 19
      end:
        line: 1231
        character: 36
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - operationId
    severity: 2
    range:
      start:
        line: 1231
        character: 19
      end:
        line: 1231
        character: 36
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1237
        character: 10
      end:
        line: 1237
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1237
        character: 16
      end:
        line: 1237
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1238
        character: 10
      end:
        line: 1238
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1238
        character: 16
      end:
        line: 1238
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1239
        character: 10
      end:
        line: 1239
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1239
        character: 16
      end:
        line: 1239
        character: 54
  - code: openapi-request-body-on-put-info
    message: PUT Requests Has a Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - requestBody
    severity: 0
    range:
      start:
        line: 1240
        character: 18
      end:
        line: 1294
        character: 33
  - code: openapi-request-body-content-on-put-info
    message: Request Body Content PUT
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - requestBody
      - content
    severity: 2
    range:
      start:
        line: 1242
        character: 16
      end:
        line: 1294
        character: 33
  - code: openapi-request-body-have-application-json-info
    message: Request Body Application JSON
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - requestBody
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1243
        character: 27
      end:
        line: 1294
        character: 33
  - code: openapi-request-body-have-schema-info
    message: Request Body Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1244
        character: 19
      end:
        line: 1288
        character: 30
  - code: openapi-request-body-have-schema-ref-info
    message: Request Bodies Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1244
        character: 19
      end:
        line: 1288
        character: 30
  - code: openapi-request-body-have-examples-info
    message: Request Bodies Have Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1289
        character: 21
      end:
        line: 1294
        character: 33
  - code: openapi-request-body-have-examples-ref-info
    message: Request Bodies Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1289
        character: 21
      end:
        line: 1294
        character: 33
  - code: openapi-response-put-204-status-code-error
    message: PUT 204 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - responses
    severity: 0
    range:
      start:
        line: 1295
        character: 16
      end:
        line: 1314
        character: 58
  - code: openapi-response-put-400-status-code-error
    message: PUT Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - responses
    severity: 0
    range:
      start:
        line: 1295
        character: 16
      end:
        line: 1314
        character: 58
  - code: openapi-response-put-401-status-code-error
    message: PUT Responses MUST 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - responses
    severity: 0
    range:
      start:
        line: 1295
        character: 16
      end:
        line: 1314
        character: 58
  - code: openapi-response-put-403-status-code-error
    message: PUT Responses MUST Have 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - responses
    severity: 0
    range:
      start:
        line: 1295
        character: 16
      end:
        line: 1314
        character: 58
  - code: openapi-response-put-429-status-code-error
    message: PUT Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - responses
    severity: 0
    range:
      start:
        line: 1295
        character: 16
      end:
        line: 1314
        character: 58
  - code: openapi-response-put-500-status-code-error
    message: PUT Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - responses
    severity: 0
    range:
      start:
        line: 1295
        character: 16
      end:
        line: 1314
        character: 58
  - code: openapi-response-put-404-status-code-info
    message: PUT Responses Has 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - responses
      - '404'
    severity: 2
    range:
      start:
        line: 1309
        character: 14
      end:
        line: 1310
        character: 50
  - code: openapi-response-put-404-schema-ref-error
    message: PUT 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - put
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 1310
        character: 16
      end:
        line: 1310
        character: 50
  - code: openapi-no-request-body-on-delete-info
    message: DELETE Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
    severity: 2
    range:
      start:
        line: 1320
        character: 11
      end:
        line: 1347
        character: 27
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
    severity: 0
    range:
      start:
        line: 1320
        character: 11
      end:
        line: 1347
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 1321
        character: 15
      end:
        line: 1321
        character: 46
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 1321
        character: 15
      end:
        line: 1321
        character: 46
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - description
    severity: 2
    range:
      start:
        line: 1322
        character: 19
      end:
        line: 1322
        character: 52
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - tags
    severity: 2
    range:
      start:
        line: 1323
        character: 11
      end:
        line: 1324
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - operationId
    severity: 0
    range:
      start:
        line: 1325
        character: 19
      end:
        line: 1325
        character: 43
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 1325
        character: 19
      end:
        line: 1325
        character: 43
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 1325
        character: 19
      end:
        line: 1325
        character: 43
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1331
        character: 10
      end:
        line: 1331
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1331
        character: 16
      end:
        line: 1331
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1332
        character: 10
      end:
        line: 1332
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1332
        character: 16
      end:
        line: 1332
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1333
        character: 10
      end:
        line: 1333
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1333
        character: 16
      end:
        line: 1333
        character: 54
  - code: openapi-response-delete-400-status-code-error
    message: DELETE Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1334
        character: 16
      end:
        line: 1342
        character: 45
  - code: openapi-response-delete-401-status-code-error
    message: DELETE Responses MUST Have 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1334
        character: 16
      end:
        line: 1342
        character: 45
  - code: openapi-response-delete-403-status-code-error
    message: DELETE Responses MUST Have 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1334
        character: 16
      end:
        line: 1342
        character: 45
  - code: openapi-response-delete-429-status-code-error
    message: DELETE Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1334
        character: 16
      end:
        line: 1342
        character: 45
  - code: openapi-response-delete-500-status-code-error
    message: DELETE Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1334
        character: 16
      end:
        line: 1342
        character: 45
  - code: openapi-response-delete-204-status-code-info
    message: DELETE 204 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - responses
      - '204'
    severity: 2
    range:
      start:
        line: 1335
        character: 14
      end:
        line: 1336
        character: 31
  - code: openapi-response-delete-404-status-code-info
    message: DELETE Responses Has 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - responses
      - '404'
    severity: 2
    range:
      start:
        line: 1339
        character: 14
      end:
        line: 1340
        character: 50
  - code: openapi-response-delete-404-schema-ref-error
    message: DELETE 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels
      - delete
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 1340
        character: 16
      end:
        line: 1340
        character: 50
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
    severity: 0
    range:
      start:
        line: 1348
        character: 60
      end:
        line: 1393
        character: 27
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
    severity: 2
    range:
      start:
        line: 1348
        character: 60
      end:
        line: 1393
        character: 27
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
    severity: 2
    range:
      start:
        line: 1348
        character: 60
      end:
        line: 1393
        character: 27
  - code: openapi-no-request-body-on-delete-info
    message: DELETE Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
    severity: 2
    range:
      start:
        line: 1349
        character: 11
      end:
        line: 1393
        character: 27
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
    severity: 0
    range:
      start:
        line: 1349
        character: 11
      end:
        line: 1393
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 1350
        character: 15
      end:
        line: 1350
        character: 43
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 1350
        character: 15
      end:
        line: 1350
        character: 43
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - description
    severity: 2
    range:
      start:
        line: 1351
        character: 19
      end:
        line: 1354
        character: 33
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - tags
    severity: 2
    range:
      start:
        line: 1355
        character: 11
      end:
        line: 1356
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - operationId
    severity: 0
    range:
      start:
        line: 1357
        character: 19
      end:
        line: 1357
        character: 38
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 1357
        character: 19
      end:
        line: 1357
        character: 38
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 1357
        character: 19
      end:
        line: 1357
        character: 38
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1363
        character: 10
      end:
        line: 1363
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1363
        character: 16
      end:
        line: 1363
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1364
        character: 10
      end:
        line: 1364
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1364
        character: 16
      end:
        line: 1364
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1365
        character: 10
      end:
        line: 1365
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1365
        character: 16
      end:
        line: 1365
        character: 54
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - parameters
      - '3'
    severity: 1
    range:
      start:
        line: 1366
        character: 10
      end:
        line: 1370
        character: 24
  - code: openapi-parameters-componentized-error
    message: Parameters MUST use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - parameters
      - '3'
    severity: 0
    range:
      start:
        line: 1366
        character: 10
      end:
        line: 1370
        character: 24
  - code: openapi-response-delete-204-status-code-error
    message: DELETE 204 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - responses
    severity: 2
    range:
      start:
        line: 1371
        character: 16
      end:
        line: 1388
        character: 45
  - code: openapi-response-delete-400-status-code-error
    message: DELETE Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1371
        character: 16
      end:
        line: 1388
        character: 45
  - code: openapi-response-delete-401-status-code-error
    message: DELETE Responses MUST Have 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1371
        character: 16
      end:
        line: 1388
        character: 45
  - code: openapi-response-delete-403-status-code-error
    message: DELETE Responses MUST Have 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1371
        character: 16
      end:
        line: 1388
        character: 45
  - code: openapi-response-delete-429-status-code-error
    message: DELETE Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1371
        character: 16
      end:
        line: 1388
        character: 45
  - code: openapi-response-delete-500-status-code-error
    message: DELETE Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1371
        character: 16
      end:
        line: 1388
        character: 45
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/label-items-2'' does not exist'
    severity: 0
    range:
      start:
        line: 1382
        character: 24
      end:
        line: 1382
        character: 61
  - code: openapi-response-delete-404-status-code-info
    message: DELETE Responses Has 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - responses
      - '404'
    severity: 2
    range:
      start:
        line: 1385
        character: 14
      end:
        line: 1386
        character: 50
  - code: openapi-response-delete-404-schema-ref-error
    message: DELETE 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}
      - delete
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 1386
        character: 16
      end:
        line: 1386
        character: 50
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
    severity: 0
    range:
      start:
        line: 1394
        character: 51
      end:
        line: 1485
        character: 27
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
    severity: 2
    range:
      start:
        line: 1394
        character: 51
      end:
        line: 1485
        character: 27
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
    severity: 2
    range:
      start:
        line: 1394
        character: 51
      end:
        line: 1485
        character: 27
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
    severity: 0
    range:
      start:
        line: 1395
        character: 8
      end:
        line: 1459
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - summary
    severity: 2
    range:
      start:
        line: 1396
        character: 15
      end:
        line: 1396
        character: 28
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - summary
    severity: 2
    range:
      start:
        line: 1396
        character: 15
      end:
        line: 1396
        character: 28
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - description
    severity: 2
    range:
      start:
        line: 1397
        character: 19
      end:
        line: 1404
        character: 122
  - code: openapi-operations-description-length-error
    message: Operation Description MUST Be Less Than 250 Characters
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - description
    severity: 1
    range:
      start:
        line: 1397
        character: 19
      end:
        line: 1404
        character: 122
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - tags
    severity: 2
    range:
      start:
        line: 1405
        character: 11
      end:
        line: 1406
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - operationId
    severity: 0
    range:
      start:
        line: 1407
        character: 19
      end:
        line: 1407
        character: 30
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - operationId
    severity: 2
    range:
      start:
        line: 1407
        character: 19
      end:
        line: 1407
        character: 30
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - operationId
    severity: 2
    range:
      start:
        line: 1407
        character: 19
      end:
        line: 1407
        character: 30
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1413
        character: 10
      end:
        line: 1413
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1413
        character: 16
      end:
        line: 1413
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1414
        character: 10
      end:
        line: 1414
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1414
        character: 16
      end:
        line: 1414
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1415
        character: 10
      end:
        line: 1415
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1415
        character: 16
      end:
        line: 1415
        character: 54
  - code: openapi-request-body-on-put-info
    message: PUT Requests Has a Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - requestBody
    severity: 0
    range:
      start:
        line: 1416
        character: 18
      end:
        line: 1443
        character: 40
  - code: openapi-request-body-content-on-put-info
    message: Request Body Content PUT
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - requestBody
      - content
    severity: 2
    range:
      start:
        line: 1418
        character: 16
      end:
        line: 1443
        character: 40
  - code: openapi-request-body-have-application-json-info
    message: Request Body Application JSON
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - requestBody
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1419
        character: 27
      end:
        line: 1443
        character: 40
  - code: openapi-request-body-have-schema-info
    message: Request Body Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1420
        character: 19
      end:
        line: 1438
        character: 26
  - code: openapi-request-body-have-schema-ref-info
    message: Request Bodies Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1420
        character: 19
      end:
        line: 1438
        character: 26
  - code: openapi-request-body-have-examples-info
    message: Request Bodies Have Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1439
        character: 21
      end:
        line: 1443
        character: 40
  - code: openapi-request-body-have-examples-ref-info
    message: Request Bodies Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1439
        character: 21
      end:
        line: 1443
        character: 40
  - code: openapi-response-put-400-status-code-error
    message: PUT Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - responses
    severity: 0
    range:
      start:
        line: 1444
        character: 16
      end:
        line: 1454
        character: 58
  - code: openapi-response-put-401-status-code-error
    message: PUT Responses MUST 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - responses
    severity: 0
    range:
      start:
        line: 1444
        character: 16
      end:
        line: 1454
        character: 58
  - code: openapi-response-put-429-status-code-error
    message: PUT Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - responses
    severity: 0
    range:
      start:
        line: 1444
        character: 16
      end:
        line: 1454
        character: 58
  - code: openapi-response-put-500-status-code-error
    message: PUT Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - responses
    severity: 0
    range:
      start:
        line: 1444
        character: 16
      end:
        line: 1454
        character: 58
  - code: openapi-response-put-204-status-code-info
    message: PUT 204 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - responses
      - '204'
    severity: 2
    range:
      start:
        line: 1445
        character: 14
      end:
        line: 1446
        character: 31
  - code: openapi-response-put-403-status-code-info
    message: PUT Responses Has 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - responses
      - '403'
    severity: 2
    range:
      start:
        line: 1447
        character: 14
      end:
        line: 1448
        character: 50
  - code: openapi-response-put-403-schema-ref-error
    message: PUT 403 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - responses
      - '403'
      - $ref
    severity: 0
    range:
      start:
        line: 1448
        character: 16
      end:
        line: 1448
        character: 50
  - code: openapi-response-put-404-status-code-info
    message: PUT Responses Has 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - responses
      - '404'
    severity: 2
    range:
      start:
        line: 1449
        character: 14
      end:
        line: 1450
        character: 50
  - code: openapi-response-put-404-schema-ref-error
    message: PUT 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - put
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 1450
        character: 16
      end:
        line: 1450
        character: 50
  - code: openapi-no-request-body-on-delete-info
    message: DELETE Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
    severity: 2
    range:
      start:
        line: 1460
        character: 11
      end:
        line: 1485
        character: 27
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
    severity: 0
    range:
      start:
        line: 1460
        character: 11
      end:
        line: 1485
        character: 27
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 1461
        character: 15
      end:
        line: 1461
        character: 30
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 1461
        character: 15
      end:
        line: 1461
        character: 30
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - description
    severity: 2
    range:
      start:
        line: 1462
        character: 19
      end:
        line: 1462
        character: 77
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - tags
    severity: 2
    range:
      start:
        line: 1463
        character: 11
      end:
        line: 1464
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - operationId
    severity: 0
    range:
      start:
        line: 1465
        character: 19
      end:
        line: 1465
        character: 32
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 1465
        character: 19
      end:
        line: 1465
        character: 32
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 1465
        character: 19
      end:
        line: 1465
        character: 32
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1471
        character: 10
      end:
        line: 1471
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1471
        character: 16
      end:
        line: 1471
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1472
        character: 10
      end:
        line: 1472
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1472
        character: 16
      end:
        line: 1472
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1473
        character: 10
      end:
        line: 1473
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1473
        character: 16
      end:
        line: 1473
        character: 54
  - code: openapi-response-delete-400-status-code-error
    message: DELETE Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1474
        character: 16
      end:
        line: 1480
        character: 50
  - code: openapi-response-delete-401-status-code-error
    message: DELETE Responses MUST Have 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1474
        character: 16
      end:
        line: 1480
        character: 50
  - code: openapi-response-delete-429-status-code-error
    message: DELETE Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1474
        character: 16
      end:
        line: 1480
        character: 50
  - code: openapi-response-delete-500-status-code-error
    message: DELETE Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1474
        character: 16
      end:
        line: 1480
        character: 50
  - code: openapi-response-delete-204-status-code-info
    message: DELETE 204 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - responses
      - '204'
    severity: 2
    range:
      start:
        line: 1475
        character: 14
      end:
        line: 1476
        character: 31
  - code: openapi-response-delete-403-status-code-info
    message: DELETE Responses Has 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - responses
      - '403'
    severity: 2
    range:
      start:
        line: 1477
        character: 14
      end:
        line: 1478
        character: 50
  - code: openapi-response-delete-403-schema-ref-error
    message: DELETE 403 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - responses
      - '403'
      - $ref
    severity: 0
    range:
      start:
        line: 1478
        character: 16
      end:
        line: 1478
        character: 50
  - code: openapi-response-delete-404-status-code-info
    message: DELETE Responses Has 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - responses
      - '404'
    severity: 2
    range:
      start:
        line: 1479
        character: 14
      end:
        line: 1480
        character: 50
  - code: openapi-response-delete-404-schema-ref-error
    message: DELETE 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/lock
      - delete
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 1480
        character: 16
      end:
        line: 1480
        character: 50
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
    severity: 0
    range:
      start:
        line: 1486
        character: 56
      end:
        line: 1618
        character: 30
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
    severity: 2
    range:
      start:
        line: 1486
        character: 56
      end:
        line: 1618
        character: 30
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
    severity: 2
    range:
      start:
        line: 1486
        character: 56
      end:
        line: 1618
        character: 30
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
    severity: 2
    range:
      start:
        line: 1487
        character: 8
      end:
        line: 1546
        character: 30
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
    severity: 0
    range:
      start:
        line: 1487
        character: 8
      end:
        line: 1546
        character: 30
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - summary
    severity: 2
    range:
      start:
        line: 1488
        character: 15
      end:
        line: 1488
        character: 42
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - summary
    severity: 2
    range:
      start:
        line: 1488
        character: 15
      end:
        line: 1488
        character: 42
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - description
    severity: 2
    range:
      start:
        line: 1489
        character: 19
      end:
        line: 1491
        character: 95
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - tags
    severity: 2
    range:
      start:
        line: 1492
        character: 11
      end:
        line: 1493
        character: 25
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 1494
        character: 19
      end:
        line: 1494
        character: 43
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 1494
        character: 19
      end:
        line: 1494
        character: 43
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 1494
        character: 19
      end:
        line: 1494
        character: 43
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1500
        character: 10
      end:
        line: 1500
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1500
        character: 16
      end:
        line: 1500
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1501
        character: 10
      end:
        line: 1501
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1501
        character: 16
      end:
        line: 1501
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1502
        character: 10
      end:
        line: 1502
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1502
        character: 16
      end:
        line: 1502
        character: 54
  - code: openapi-parameters-componentized-error
    message: Parameters MUST use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '3'
    severity: 0
    range:
      start:
        line: 1503
        character: 10
      end:
        line: 1520
        character: 20
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '4'
    severity: 1
    range:
      start:
        line: 1521
        character: 10
      end:
        line: 1521
        character: 50
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '4'
      - $ref
    severity: 2
    range:
      start:
        line: 1521
        character: 16
      end:
        line: 1521
        character: 50
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '5'
    severity: 1
    range:
      start:
        line: 1522
        character: 10
      end:
        line: 1522
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - parameters
      - '5'
      - $ref
    severity: 2
    range:
      start:
        line: 1522
        character: 16
      end:
        line: 1522
        character: 46
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1523
        character: 16
      end:
        line: 1541
        character: 45
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1523
        character: 16
      end:
        line: 1541
        character: 45
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1523
        character: 16
      end:
        line: 1541
        character: 45
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1523
        character: 16
      end:
        line: 1541
        character: 45
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1523
        character: 16
      end:
        line: 1541
        character: 45
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 1524
        character: 14
      end:
        line: 1537
        character: 47
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 1525
        character: 23
      end:
        line: 1525
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 1526
        character: 18
      end:
        line: 1534
        character: 62
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1527
        character: 29
      end:
        line: 1534
        character: 62
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1528
        character: 21
      end:
        line: 1531
        character: 55
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1528
        character: 21
      end:
        line: 1531
        character: 55
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1532
        character: 23
      end:
        line: 1534
        character: 62
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 1534
        character: 24
      end:
        line: 1534
        character: 62
  - code: openapi-response-get-404-schema-ref-error
    message: GET 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - get
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 1539
        character: 16
      end:
        line: 1539
        character: 50
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
    severity: 0
    range:
      start:
        line: 1547
        character: 9
      end:
        line: 1618
        character: 30
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - summary
    severity: 2
    range:
      start:
        line: 1548
        character: 15
      end:
        line: 1548
        character: 43
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - summary
    severity: 2
    range:
      start:
        line: 1548
        character: 15
      end:
        line: 1548
        character: 43
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - description
    severity: 2
    range:
      start:
        line: 1549
        character: 19
      end:
        line: 1553
        character: 36
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - tags
    severity: 2
    range:
      start:
        line: 1554
        character: 11
      end:
        line: 1555
        character: 25
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - operationId
    severity: 0
    range:
      start:
        line: 1556
        character: 19
      end:
        line: 1556
        character: 45
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - operationId
    severity: 2
    range:
      start:
        line: 1556
        character: 19
      end:
        line: 1556
        character: 45
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - operationId
    severity: 2
    range:
      start:
        line: 1556
        character: 19
      end:
        line: 1556
        character: 45
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1562
        character: 10
      end:
        line: 1562
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1562
        character: 16
      end:
        line: 1562
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1563
        character: 10
      end:
        line: 1563
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1563
        character: 16
      end:
        line: 1563
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1564
        character: 10
      end:
        line: 1564
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1564
        character: 16
      end:
        line: 1564
        character: 54
  - code: openapi-request-body-on-post-info
    message: POST Requests Has a Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - requestBody
    severity: 2
    range:
      start:
        line: 1565
        character: 18
      end:
        line: 1592
        character: 32
  - code: openapi-request-body-content-on-post-info
    message: Request Body Content POST
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - requestBody
      - content
    severity: 2
    range:
      start:
        line: 1567
        character: 16
      end:
        line: 1592
        character: 32
  - code: openapi-request-body-have-application-json-info
    message: Request Body Application JSON
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - requestBody
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1568
        character: 27
      end:
        line: 1592
        character: 32
  - code: openapi-request-body-have-schema-info
    message: Request Body Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1569
        character: 19
      end:
        line: 1588
        character: 25
  - code: openapi-request-body-have-schema-ref-info
    message: Request Bodies Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - requestBody
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1569
        character: 19
      end:
        line: 1588
        character: 25
  - code: openapi-request-body-have-examples-info
    message: Request Bodies Have Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1589
        character: 21
      end:
        line: 1592
        character: 32
  - code: openapi-request-body-have-examples-ref-info
    message: Request Bodies Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - requestBody
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1589
        character: 21
      end:
        line: 1592
        character: 32
  - code: openapi-response-post-400-status-code-error
    message: POST Responses Has 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1593
        character: 16
      end:
        line: 1613
        character: 58
  - code: openapi-response-post-401-status-code-error
    message: POST Responses Has 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1593
        character: 16
      end:
        line: 1613
        character: 58
  - code: openapi-response-post-403-status-code-error
    message: POST Responses Has 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1593
        character: 16
      end:
        line: 1613
        character: 58
  - code: openapi-response-post-404-status-code-error
    message: POST Responses Has 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1593
        character: 16
      end:
        line: 1613
        character: 58
  - code: openapi-response-post-429-status-code-error
    message: POST Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1593
        character: 16
      end:
        line: 1613
        character: 58
  - code: openapi-response-post-500-status-code-error
    message: POST Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
    severity: 0
    range:
      start:
        line: 1593
        character: 16
      end:
        line: 1613
        character: 58
  - code: openapi-response-post-201-status-code-info
    message: POST Responses Has 201 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
      - '201'
    severity: 2
    range:
      start:
        line: 1603
        character: 14
      end:
        line: 1611
        character: 56
  - code: openapi-response-post-201-description-info
    message: POST 201 Responses Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
      - '201'
      - description
    severity: 2
    range:
      start:
        line: 1604
        character: 23
      end:
        line: 1604
        character: 31
  - code: openapi-response-post-201-content-info
    message: POST 201 Responses Has Content
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
      - '201'
      - content
    severity: 2
    range:
      start:
        line: 1605
        character: 18
      end:
        line: 1611
        character: 56
  - code: openapi-response-post-201-media-type-info
    message: POST 201 Responses Has Media Type
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
      - '201'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1606
        character: 29
      end:
        line: 1611
        character: 56
  - code: openapi-response-post-201-media-type-schema-info
    message: POST 201 Responses Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
      - '201'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1607
        character: 21
      end:
        line: 1608
        character: 53
  - code: openapi-response-post-201-schema-ref-info
    message: POST 201 Responses Has Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
      - '201'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1607
        character: 21
      end:
        line: 1608
        character: 53
  - code: openapi-response-post-201-examples-ref-info
    message: POST 201 Responses Has Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
      - '201'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1609
        character: 23
      end:
        line: 1611
        character: 56
  - code: openapi-response-post-201-media-type-examples-info
    message: POST 201 Responses Has Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions
      - post
      - responses
      - '201'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1609
        character: 23
      end:
        line: 1611
        character: 56
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
    severity: 0
    range:
      start:
        line: 1619
        character: 70
      end:
        line: 1649
        character: 30
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
    severity: 2
    range:
      start:
        line: 1619
        character: 70
      end:
        line: 1649
        character: 30
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
    severity: 2
    range:
      start:
        line: 1619
        character: 70
      end:
        line: 1649
        character: 30
  - code: openapi-no-request-body-on-delete-info
    message: DELETE Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
    severity: 2
    range:
      start:
        line: 1620
        character: 11
      end:
        line: 1649
        character: 30
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
    severity: 0
    range:
      start:
        line: 1620
        character: 11
      end:
        line: 1649
        character: 30
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 1621
        character: 15
      end:
        line: 1621
        character: 39
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - summary
    severity: 2
    range:
      start:
        line: 1621
        character: 15
      end:
        line: 1621
        character: 39
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - description
    severity: 2
    range:
      start:
        line: 1622
        character: 19
      end:
        line: 1629
        character: 95
  - code: openapi-operations-description-length-error
    message: Operation Description MUST Be Less Than 250 Characters
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - description
    severity: 1
    range:
      start:
        line: 1622
        character: 19
      end:
        line: 1629
        character: 95
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - tags
    severity: 2
    range:
      start:
        line: 1630
        character: 11
      end:
        line: 1631
        character: 25
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - operationId
    severity: 0
    range:
      start:
        line: 1632
        character: 19
      end:
        line: 1632
        character: 45
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 1632
        character: 19
      end:
        line: 1632
        character: 45
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - operationId
    severity: 2
    range:
      start:
        line: 1632
        character: 19
      end:
        line: 1632
        character: 45
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1638
        character: 10
      end:
        line: 1638
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1638
        character: 16
      end:
        line: 1638
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1639
        character: 10
      end:
        line: 1639
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1639
        character: 16
      end:
        line: 1639
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1640
        character: 10
      end:
        line: 1640
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1640
        character: 16
      end:
        line: 1640
        character: 54
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - parameters
      - '3'
    severity: 1
    range:
      start:
        line: 1641
        character: 10
      end:
        line: 1641
        character: 53
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - parameters
      - '3'
      - $ref
    severity: 2
    range:
      start:
        line: 1641
        character: 16
      end:
        line: 1641
        character: 53
  - code: openapi-response-delete-400-status-code-error
    message: DELETE Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1642
        character: 16
      end:
        line: 1644
        character: 31
  - code: openapi-response-delete-401-status-code-error
    message: DELETE Responses MUST Have 401 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1642
        character: 16
      end:
        line: 1644
        character: 31
  - code: openapi-response-delete-403-status-code-error
    message: DELETE Responses MUST Have 403 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1642
        character: 16
      end:
        line: 1644
        character: 31
  - code: openapi-response-delete-404-status-code-error
    message: DELETE Responses MUST Have 404 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1642
        character: 16
      end:
        line: 1644
        character: 31
  - code: openapi-response-delete-429-status-code-error
    message: DELETE Responses MUST Have 429 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1642
        character: 16
      end:
        line: 1644
        character: 31
  - code: openapi-response-delete-500-status-code-error
    message: DELETE Responses MUST Have 500 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - responses
    severity: 0
    range:
      start:
        line: 1642
        character: 16
      end:
        line: 1644
        character: 31
  - code: openapi-response-delete-204-status-code-info
    message: DELETE 204 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}
      - delete
      - responses
      - '204'
    severity: 2
    range:
      start:
        line: 1643
        character: 14
      end:
        line: 1644
        character: 31
  - code: openapi-no-api-in-path-error
    message: No API in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
    severity: 0
    range:
      start:
        line: 1650
        character: 55
      end:
        line: 1690
        character: 29
  - code: openapi-no-path-trailing-slash-info
    message: Path Trailing Slash
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
    severity: 2
    range:
      start:
        line: 1650
        character: 55
      end:
        line: 1690
        character: 29
  - code: openapi-version-in-path-info
    message: Version in Path
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
    severity: 2
    range:
      start:
        line: 1650
        character: 55
      end:
        line: 1690
        character: 29
  - code: openapi-no-request-body-on-get-info
    message: GET Request Body
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
    severity: 2
    range:
      start:
        line: 1651
        character: 8
      end:
        line: 1690
        character: 29
  - code: openapi-operation-security-definitions-error
    message: Operations MUST Have a Security Definition
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
    severity: 0
    range:
      start:
        line: 1651
        character: 8
      end:
        line: 1690
        character: 29
  - code: openapi-operations-summary-info
    message: Operation Has a Summary
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - summary
    severity: 2
    range:
      start:
        line: 1652
        character: 15
      end:
        line: 1652
        character: 48
  - code: openapi-operations-summary-period-none-info
    message: Operation Has a Period.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - summary
    severity: 2
    range:
      start:
        line: 1652
        character: 15
      end:
        line: 1652
        character: 48
  - code: openapi-operations-description-info
    message: Operation Has Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - description
    severity: 2
    range:
      start:
        line: 1653
        character: 19
      end:
        line: 1653
        character: 57
  - code: openapi-operations-tags-info
    message: Operations Has Tags
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - tags
    severity: 2
    range:
      start:
        line: 1654
        character: 11
      end:
        line: 1655
        character: 22
  - code: openapi-operations-operation-ids-camel-case-error
    message: Operation Identifier MUST Be camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - operationId
    severity: 0
    range:
      start:
        line: 1656
        character: 19
      end:
        line: 1656
        character: 50
  - code: openapi-operations-operation-ids-camel-case-info
    message: Operation Identifier Is camelCase
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 1656
        character: 19
      end:
        line: 1656
        character: 50
  - code: openapi-operations-operation-ids-info
    message: Operation Has Identifier
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - operationId
    severity: 2
    range:
      start:
        line: 1656
        character: 19
      end:
        line: 1656
        character: 50
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - parameters
      - '0'
    severity: 1
    range:
      start:
        line: 1662
        character: 10
      end:
        line: 1662
        character: 47
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - parameters
      - '0'
      - $ref
    severity: 2
    range:
      start:
        line: 1662
        character: 16
      end:
        line: 1662
        character: 47
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - parameters
      - '1'
    severity: 1
    range:
      start:
        line: 1663
        character: 10
      end:
        line: 1663
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - parameters
      - '1'
      - $ref
    severity: 2
    range:
      start:
        line: 1663
        character: 16
      end:
        line: 1663
        character: 46
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - parameters
      - '2'
    severity: 1
    range:
      start:
        line: 1664
        character: 10
      end:
        line: 1664
        character: 54
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - parameters
      - '2'
      - $ref
    severity: 2
    range:
      start:
        line: 1664
        character: 16
      end:
        line: 1664
        character: 54
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - parameters
      - '3'
    severity: 1
    range:
      start:
        line: 1665
        character: 10
      end:
        line: 1665
        character: 50
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - parameters
      - '3'
      - $ref
    severity: 2
    range:
      start:
        line: 1665
        character: 16
      end:
        line: 1665
        character: 50
  - code: openapi-components-parameters-description-error
    message: Parameters MUST Have a Description
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - parameters
      - '4'
    severity: 1
    range:
      start:
        line: 1666
        character: 10
      end:
        line: 1666
        character: 46
  - code: openapi-parameters-componentized-info
    message: Parameters use components $ref.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - parameters
      - '4'
      - $ref
    severity: 2
    range:
      start:
        line: 1666
        character: 16
      end:
        line: 1666
        character: 46
  - code: openapi-response-get-400-status-code-error
    message: GET Responses MUST Have 400 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1667
        character: 16
      end:
        line: 1685
        character: 45
  - code: openapi-response-get-401-status-code-error
    message: GET Responses Has 401 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1667
        character: 16
      end:
        line: 1685
        character: 45
  - code: openapi-response-get-403-status-code-error
    message: GET Responses Has 403 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1667
        character: 16
      end:
        line: 1685
        character: 45
  - code: openapi-response-get-429-status-code-error
    message: GET Responses Has 429 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1667
        character: 16
      end:
        line: 1685
        character: 45
  - code: openapi-response-get-500-status-code-error
    message: GET Responses MUST Have 500 Status Code
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
    severity: 0
    range:
      start:
        line: 1667
        character: 16
      end:
        line: 1685
        character: 45
  - code: openapi-response-get-200-status-code-info
    message: GET Responses Has 200 Status Codes
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '200'
    severity: 2
    range:
      start:
        line: 1668
        character: 14
      end:
        line: 1681
        character: 47
  - code: openapi-response-get-200-description-info
    message: GET 200 Response has description.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '200'
      - description
    severity: 2
    range:
      start:
        line: 1669
        character: 23
      end:
        line: 1669
        character: 31
  - code: openapi-response-get-200-content-info
    message: GET 200 Response Has Content.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '200'
      - content
    severity: 2
    range:
      start:
        line: 1670
        character: 18
      end:
        line: 1678
        character: 69
  - code: openapi-response-get-200-media-type-info
    message: GET 200 Response Has Media Type.
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '200'
      - content
      - application/json
    severity: 2
    range:
      start:
        line: 1671
        character: 29
      end:
        line: 1678
        character: 69
  - code: openapi-response-get-200-media-type-schema-info
    message: GET 200 Response Has Schema
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1672
        character: 21
      end:
        line: 1675
        character: 68
  - code: openapi-response-get-200-media-type-schema-ref-info
    message: GET 200 Responses Uses Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
    severity: 2
    range:
      start:
        line: 1672
        character: 21
      end:
        line: 1675
        character: 68
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '200'
      - content
      - application/json
      - schema
      - items
      - $ref
    message: '''#/components/schemas/timeline-issue-events'' does not exist'
    severity: 0
    range:
      start:
        line: 1675
        character: 24
      end:
        line: 1675
        character: 68
  - code: openapi-response-get-200-media-type-examples-info
    message: GET 200 ResponseHas Examples
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
    severity: 2
    range:
      start:
        line: 1676
        character: 23
      end:
        line: 1678
        character: 69
  - code: invalid-ref
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/timeline-issue-events'' does not exist'
    severity: 0
    range:
      start:
        line: 1678
        character: 24
      end:
        line: 1678
        character: 69
  - code: openapi-response-get-200-media-type-examples-ref-error
    message: GET 200 Responses MUST Use Examples Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '200'
      - content
      - application/json
      - examples
      - default
      - $ref
    severity: 0
    range:
      start:
        line: 1678
        character: 24
      end:
        line: 1678
        character: 69
  - code: openapi-response-get-404-schema-ref-error
    message: GET 404 Responses MUST Use Schema Reference
    path:
      - paths
      - /repos/{owner}/{repo}/issues/{issue_number}/timeline
      - get
      - responses
      - '404'
      - $ref
    severity: 0
    range:
      start:
        line: 1683
        character: 16
      end:
        line: 1683
        character: 50
  - code: invalid-ref
    path:
      - x-webhooks
      - branch-protection-rule-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-branch-protection-rule-created' does not
      exist
    severity: 0
    range:
      start:
        line: 1764
        character: 20
      end:
        line: 1764
        character: 81
  - code: invalid-ref
    path:
      - x-webhooks
      - branch-protection-rule-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-branch-protection-rule-deleted' does not
      exist
    severity: 0
    range:
      start:
        line: 1850
        character: 20
      end:
        line: 1850
        character: 81
  - code: invalid-ref
    path:
      - x-webhooks
      - branch-protection-rule-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-branch-protection-rule-edited' does not
      exist
    severity: 0
    range:
      start:
        line: 1936
        character: 20
      end:
        line: 1936
        character: 80
  - code: invalid-ref
    path:
      - x-webhooks
      - cache-sync
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-cache-sync'' does not exist'
    severity: 0
    range:
      start:
        line: 2011
        character: 20
      end:
        line: 2011
        character: 61
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-completed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-check-run-completed'' does not exist'
    severity: 0
    range:
      start:
        line: 2114
        character: 20
      end:
        line: 2114
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-completed
      - post
      - requestBody
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/check-run-completed'' does not exist'
    severity: 0
    range:
      start:
        line: 2117
        character: 22
      end:
        line: 2117
        character: 65
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-completed
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-check-run-completed-form-encoded' does not
      exist
    severity: 0
    range:
      start:
        line: 2120
        character: 20
      end:
        line: 2120
        character: 83
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-completed
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - examples
      - default
      - $ref
    message: '''#/components/examples/check-run-completed-form-encoded'' does not exist'
    severity: 0
    range:
      start:
        line: 2123
        character: 22
      end:
        line: 2123
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-check-run-created'' does not exist'
    severity: 0
    range:
      start:
        line: 2227
        character: 20
      end:
        line: 2227
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-created
      - post
      - requestBody
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/check-run-created'' does not exist'
    severity: 0
    range:
      start:
        line: 2230
        character: 22
      end:
        line: 2230
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-created
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-check-run-created-form-encoded' does not
      exist
    severity: 0
    range:
      start:
        line: 2233
        character: 20
      end:
        line: 2233
        character: 81
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-created
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - examples
      - default
      - $ref
    message: '''#/components/examples/check-run-created-form-encoded'' does not exist'
    severity: 0
    range:
      start:
        line: 2236
        character: 22
      end:
        line: 2236
        character: 76
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-requested-action
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-check-run-requested-action'' does not exist'
    severity: 0
    range:
      start:
        line: 2345
        character: 20
      end:
        line: 2345
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-requested-action
      - post
      - requestBody
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/check-run-requested-action'' does not exist'
    severity: 0
    range:
      start:
        line: 2348
        character: 22
      end:
        line: 2348
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-requested-action
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-check-run-requested-action-form-encoded'
      does not exist
    severity: 0
    range:
      start:
        line: 2351
        character: 20
      end:
        line: 2352
        character: 84
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-requested-action
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - examples
      - default
      - $ref
    message: >-
      '#/components/examples/check-run-requested-action-form-encoded' does not
      exist
    severity: 0
    range:
      start:
        line: 2355
        character: 22
      end:
        line: 2355
        character: 85
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-rerequested
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-check-run-rerequested'' does not exist'
    severity: 0
    range:
      start:
        line: 2462
        character: 20
      end:
        line: 2462
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-rerequested
      - post
      - requestBody
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/check-run-rerequested'' does not exist'
    severity: 0
    range:
      start:
        line: 2465
        character: 22
      end:
        line: 2465
        character: 67
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-rerequested
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-check-run-rerequested-form-encoded' does not
      exist
    severity: 0
    range:
      start:
        line: 2468
        character: 20
      end:
        line: 2468
        character: 85
  - code: invalid-ref
    path:
      - x-webhooks
      - check-run-rerequested
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - examples
      - default
      - $ref
    message: '''#/components/examples/check-run-rerequested-form-encoded'' does not exist'
    severity: 0
    range:
      start:
        line: 2471
        character: 22
      end:
        line: 2471
        character: 80
  - code: invalid-ref
    path:
      - x-webhooks
      - check-suite-completed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-check-suite-completed'' does not exist'
    severity: 0
    range:
      start:
        line: 2576
        character: 20
      end:
        line: 2576
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - check-suite-requested
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-check-suite-requested'' does not exist'
    severity: 0
    range:
      start:
        line: 2685
        character: 20
      end:
        line: 2685
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - check-suite-rerequested
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-check-suite-rerequested'' does not exist'
    severity: 0
    range:
      start:
        line: 2793
        character: 20
      end:
        line: 2793
        character: 74
  - code: invalid-ref
    path:
      - x-webhooks
      - code-scanning-alert-appeared-in-branch
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-code-scanning-alert-appeared-in-branch' does
      not exist
    severity: 0
    range:
      start:
        line: 2881
        character: 20
      end:
        line: 2882
        character: 83
  - code: invalid-ref
    path:
      - x-webhooks
      - code-scanning-alert-closed-by-user
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-code-scanning-alert-closed-by-user' does not
      exist
    severity: 0
    range:
      start:
        line: 2967
        character: 20
      end:
        line: 2967
        character: 85
  - code: invalid-ref
    path:
      - x-webhooks
      - code-scanning-alert-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-code-scanning-alert-created'' does not exist'
    severity: 0
    range:
      start:
        line: 3052
        character: 20
      end:
        line: 3052
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - code-scanning-alert-fixed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-code-scanning-alert-fixed'' does not exist'
    severity: 0
    range:
      start:
        line: 3137
        character: 20
      end:
        line: 3137
        character: 76
  - code: invalid-ref
    path:
      - x-webhooks
      - code-scanning-alert-reopened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-code-scanning-alert-reopened'' does not exist'
    severity: 0
    range:
      start:
        line: 3222
        character: 20
      end:
        line: 3222
        character: 79
  - code: invalid-ref
    path:
      - x-webhooks
      - code-scanning-alert-reopened-by-user
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-code-scanning-alert-reopened-by-user' does
      not exist
    severity: 0
    range:
      start:
        line: 3307
        character: 20
      end:
        line: 3308
        character: 81
  - code: invalid-ref
    path:
      - x-webhooks
      - commit-comment-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-commit-comment-created'' does not exist'
    severity: 0
    range:
      start:
        line: 3400
        character: 20
      end:
        line: 3400
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - create
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-create'' does not exist'
    severity: 0
    range:
      start:
        line: 3488
        character: 20
      end:
        line: 3488
        character: 57
  - code: invalid-ref
    path:
      - x-webhooks
      - delete
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-delete'' does not exist'
    severity: 0
    range:
      start:
        line: 3572
        character: 20
      end:
        line: 3572
        character: 57
  - code: invalid-ref
    path:
      - x-webhooks
      - dependabot-alert-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-dependabot-alert-created'' does not exist'
    severity: 0
    range:
      start:
        line: 3665
        character: 20
      end:
        line: 3665
        character: 75
  - code: invalid-ref
    path:
      - x-webhooks
      - dependabot-alert-dismissed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-dependabot-alert-dismissed'' does not exist'
    severity: 0
    range:
      start:
        line: 3755
        character: 20
      end:
        line: 3755
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - dependabot-alert-fixed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-dependabot-alert-fixed'' does not exist'
    severity: 0
    range:
      start:
        line: 3845
        character: 20
      end:
        line: 3845
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - dependabot-alert-reintroduced
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-dependabot-alert-reintroduced' does not
      exist
    severity: 0
    range:
      start:
        line: 3937
        character: 20
      end:
        line: 3937
        character: 80
  - code: invalid-ref
    path:
      - x-webhooks
      - dependabot-alert-reopened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-dependabot-alert-reopened'' does not exist'
    severity: 0
    range:
      start:
        line: 4027
        character: 20
      end:
        line: 4027
        character: 76
  - code: invalid-ref
    path:
      - x-webhooks
      - deploy-key-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-deploy-key-created'' does not exist'
    severity: 0
    range:
      start:
        line: 4113
        character: 20
      end:
        line: 4113
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - deploy-key-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-deploy-key-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 4199
        character: 20
      end:
        line: 4199
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - deployment-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-deployment-created'' does not exist'
    severity: 0
    range:
      start:
        line: 4289
        character: 20
      end:
        line: 4289
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - deployment-review-approved
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-deployment-review-approved'' does not exist'
    severity: 0
    range:
      start:
        line: 4379
        character: 20
      end:
        line: 4379
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - deployment-review-rejected
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-deployment-review-rejected'' does not exist'
    severity: 0
    range:
      start:
        line: 4467
        character: 20
      end:
        line: 4467
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - deployment-review-requested
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-deployment-review-requested'' does not exist'
    severity: 0
    range:
      start:
        line: 4555
        character: 20
      end:
        line: 4555
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - deployment-status-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-deployment-status-created'' does not exist'
    severity: 0
    range:
      start:
        line: 4643
        character: 20
      end:
        line: 4643
        character: 76
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-answered
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-answered'' does not exist'
    severity: 0
    range:
      start:
        line: 4733
        character: 20
      end:
        line: 4733
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-category-changed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-category-changed'' does not exist'
    severity: 0
    range:
      start:
        line: 4823
        character: 20
      end:
        line: 4823
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-closed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-closed'' does not exist'
    severity: 0
    range:
      start:
        line: 4913
        character: 20
      end:
        line: 4913
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-comment-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-comment-created'' does not exist'
    severity: 0
    range:
      start:
        line: 5003
        character: 20
      end:
        line: 5003
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-comment-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-comment-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 5093
        character: 20
      end:
        line: 5093
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-comment-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-comment-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 5183
        character: 20
      end:
        line: 5183
        character: 76
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-created'' does not exist'
    severity: 0
    range:
      start:
        line: 5273
        character: 20
      end:
        line: 5273
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 5363
        character: 20
      end:
        line: 5363
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 5455
        character: 20
      end:
        line: 5455
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-labeled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-labeled'' does not exist'
    severity: 0
    range:
      start:
        line: 5545
        character: 20
      end:
        line: 5545
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-locked
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-locked'' does not exist'
    severity: 0
    range:
      start:
        line: 5635
        character: 20
      end:
        line: 5635
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-pinned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-pinned'' does not exist'
    severity: 0
    range:
      start:
        line: 5725
        character: 20
      end:
        line: 5725
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-reopened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-reopened'' does not exist'
    severity: 0
    range:
      start:
        line: 5815
        character: 20
      end:
        line: 5815
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-transferred
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-transferred'' does not exist'
    severity: 0
    range:
      start:
        line: 5905
        character: 20
      end:
        line: 5905
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-unanswered
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-unanswered'' does not exist'
    severity: 0
    range:
      start:
        line: 5995
        character: 20
      end:
        line: 5995
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-unlabeled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-unlabeled'' does not exist'
    severity: 0
    range:
      start:
        line: 6085
        character: 20
      end:
        line: 6085
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-unlocked
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-unlocked'' does not exist'
    severity: 0
    range:
      start:
        line: 6175
        character: 20
      end:
        line: 6175
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - discussion-unpinned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-discussion-unpinned'' does not exist'
    severity: 0
    range:
      start:
        line: 6265
        character: 20
      end:
        line: 6265
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - enterprise-anonymous-access-disabled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-enterprise-anonymous-access-disabled' does
      not exist
    severity: 0
    range:
      start:
        line: 6342
        character: 20
      end:
        line: 6343
        character: 81
  - code: invalid-ref
    path:
      - x-webhooks
      - enterprise-anonymous-access-enabled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-enterprise-anonymous-access-enabled' does
      not exist
    severity: 0
    range:
      start:
        line: 6418
        character: 20
      end:
        line: 6418
        character: 86
  - code: invalid-ref
    path:
      - x-webhooks
      - fork
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-fork'' does not exist'
    severity: 0
    range:
      start:
        line: 6498
        character: 20
      end:
        line: 6498
        character: 55
  - code: invalid-ref
    path:
      - x-webhooks
      - github-app-authorization-revoked
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-github-app-authorization-revoked' does not
      exist
    severity: 0
    range:
      start:
        line: 6596
        character: 20
      end:
        line: 6596
        character: 83
  - code: invalid-ref
    path:
      - x-webhooks
      - gollum
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-gollum'' does not exist'
    severity: 0
    range:
      start:
        line: 6673
        character: 20
      end:
        line: 6673
        character: 57
  - code: invalid-ref
    path:
      - x-webhooks
      - installation-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-installation-created'' does not exist'
    severity: 0
    range:
      start:
        line: 6758
        character: 20
      end:
        line: 6758
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - installation-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-installation-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 6843
        character: 20
      end:
        line: 6843
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - installation-new-permissions-accepted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-installation-new-permissions-accepted' does
      not exist
    severity: 0
    range:
      start:
        line: 6926
        character: 20
      end:
        line: 6927
        character: 82
  - code: invalid-ref
    path:
      - x-webhooks
      - installation-repositories-added
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-installation-repositories-added' does not
      exist
    severity: 0
    range:
      start:
        line: 7012
        character: 20
      end:
        line: 7012
        character: 82
  - code: invalid-ref
    path:
      - x-webhooks
      - installation-repositories-removed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-installation-repositories-removed' does not
      exist
    severity: 0
    range:
      start:
        line: 7097
        character: 20
      end:
        line: 7097
        character: 84
  - code: invalid-ref
    path:
      - x-webhooks
      - installation-suspend
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-installation-suspend'' does not exist'
    severity: 0
    range:
      start:
        line: 7182
        character: 20
      end:
        line: 7182
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - installation-target-renamed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-installation-target-renamed'' does not exist'
    severity: 0
    range:
      start:
        line: 7264
        character: 20
      end:
        line: 7264
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - installation-unsuspend
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-installation-unsuspend'' does not exist'
    severity: 0
    range:
      start:
        line: 7349
        character: 20
      end:
        line: 7349
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - issue-comment-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issue-comment-created'' does not exist'
    severity: 0
    range:
      start:
        line: 7444
        character: 20
      end:
        line: 7444
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - issue-comment-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issue-comment-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 7541
        character: 20
      end:
        line: 7541
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - issue-comment-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issue-comment-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 7638
        character: 20
      end:
        line: 7638
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-assigned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-assigned'' does not exist'
    severity: 0
    range:
      start:
        line: 7726
        character: 20
      end:
        line: 7726
        character: 66
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-closed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-closed'' does not exist'
    severity: 0
    range:
      start:
        line: 7814
        character: 20
      end:
        line: 7814
        character: 64
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 7902
        character: 20
      end:
        line: 7902
        character: 65
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-demilestoned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-demilestoned'' does not exist'
    severity: 0
    range:
      start:
        line: 7990
        character: 20
      end:
        line: 7990
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 8078
        character: 20
      end:
        line: 8078
        character: 64
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-labeled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-labeled'' does not exist'
    severity: 0
    range:
      start:
        line: 8166
        character: 20
      end:
        line: 8166
        character: 65
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-locked
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-locked'' does not exist'
    severity: 0
    range:
      start:
        line: 8256
        character: 20
      end:
        line: 8256
        character: 64
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-milestoned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-milestoned'' does not exist'
    severity: 0
    range:
      start:
        line: 8344
        character: 20
      end:
        line: 8344
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-opened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-opened'' does not exist'
    severity: 0
    range:
      start:
        line: 8434
        character: 20
      end:
        line: 8434
        character: 64
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-pinned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-pinned'' does not exist'
    severity: 0
    range:
      start:
        line: 8525
        character: 20
      end:
        line: 8525
        character: 64
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-reopened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-reopened'' does not exist'
    severity: 0
    range:
      start:
        line: 8613
        character: 20
      end:
        line: 8613
        character: 66
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-transferred
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-transferred'' does not exist'
    severity: 0
    range:
      start:
        line: 8704
        character: 20
      end:
        line: 8704
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-unassigned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-unassigned'' does not exist'
    severity: 0
    range:
      start:
        line: 8792
        character: 20
      end:
        line: 8792
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-unlabeled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-unlabeled'' does not exist'
    severity: 0
    range:
      start:
        line: 8880
        character: 20
      end:
        line: 8880
        character: 67
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-unlocked
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-unlocked'' does not exist'
    severity: 0
    range:
      start:
        line: 8970
        character: 20
      end:
        line: 8970
        character: 66
  - code: invalid-ref
    path:
      - x-webhooks
      - issues-unpinned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-issues-unpinned'' does not exist'
    severity: 0
    range:
      start:
        line: 9061
        character: 20
      end:
        line: 9061
        character: 66
  - code: invalid-ref
    path:
      - x-webhooks
      - label-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-label-created'' does not exist'
    severity: 0
    range:
      start:
        line: 9152
        character: 20
      end:
        line: 9152
        character: 64
  - code: invalid-ref
    path:
      - x-webhooks
      - label-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-label-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 9243
        character: 20
      end:
        line: 9243
        character: 64
  - code: invalid-ref
    path:
      - x-webhooks
      - label-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-label-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 9334
        character: 20
      end:
        line: 9334
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - member-added
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-member-added'' does not exist'
    severity: 0
    range:
      start:
        line: 9421
        character: 20
      end:
        line: 9421
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - member-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-member-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 9509
        character: 20
      end:
        line: 9509
        character: 64
  - code: invalid-ref
    path:
      - x-webhooks
      - member-removed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-member-removed'' does not exist'
    severity: 0
    range:
      start:
        line: 9597
        character: 20
      end:
        line: 9597
        character: 65
  - code: invalid-ref
    path:
      - x-webhooks
      - membership-added
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-membership-added'' does not exist'
    severity: 0
    range:
      start:
        line: 9684
        character: 20
      end:
        line: 9684
        character: 67
  - code: invalid-ref
    path:
      - x-webhooks
      - membership-removed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-membership-removed'' does not exist'
    severity: 0
    range:
      start:
        line: 9770
        character: 20
      end:
        line: 9770
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - meta-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-meta-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 9848
        character: 20
      end:
        line: 9848
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - milestone-closed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-milestone-closed'' does not exist'
    severity: 0
    range:
      start:
        line: 9940
        character: 20
      end:
        line: 9940
        character: 67
  - code: invalid-ref
    path:
      - x-webhooks
      - milestone-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-milestone-created'' does not exist'
    severity: 0
    range:
      start:
        line: 10030
        character: 20
      end:
        line: 10030
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - milestone-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-milestone-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 10120
        character: 20
      end:
        line: 10120
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - milestone-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-milestone-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 10210
        character: 20
      end:
        line: 10210
        character: 67
  - code: invalid-ref
    path:
      - x-webhooks
      - milestone-opened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-milestone-opened'' does not exist'
    severity: 0
    range:
      start:
        line: 10300
        character: 20
      end:
        line: 10300
        character: 67
  - code: invalid-ref
    path:
      - x-webhooks
      - organization-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-organization-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 10389
        character: 20
      end:
        line: 10389
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - organization-member-added
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-organization-member-added'' does not exist'
    severity: 0
    range:
      start:
        line: 10478
        character: 20
      end:
        line: 10478
        character: 76
  - code: invalid-ref
    path:
      - x-webhooks
      - organization-member-invited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-organization-member-invited'' does not exist'
    severity: 0
    range:
      start:
        line: 10567
        character: 20
      end:
        line: 10567
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - organization-member-removed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-organization-member-removed'' does not exist'
    severity: 0
    range:
      start:
        line: 10656
        character: 20
      end:
        line: 10656
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - organization-renamed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-organization-renamed'' does not exist'
    severity: 0
    range:
      start:
        line: 10745
        character: 20
      end:
        line: 10745
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - package-published
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-package-published'' does not exist'
    severity: 0
    range:
      start:
        line: 10831
        character: 20
      end:
        line: 10831
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - package-updated
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-package-updated'' does not exist'
    severity: 0
    range:
      start:
        line: 10917
        character: 20
      end:
        line: 10917
        character: 66
  - code: invalid-ref
    path:
      - x-webhooks
      - page-build
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-page-build'' does not exist'
    severity: 0
    range:
      start:
        line: 11001
        character: 20
      end:
        line: 11001
        character: 61
  - code: invalid-ref
    path:
      - x-webhooks
      - ping
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-ping'' does not exist'
    severity: 0
    range:
      start:
        line: 11075
        character: 20
      end:
        line: 11075
        character: 55
  - code: invalid-ref
    path:
      - x-webhooks
      - ping
      - post
      - requestBody
      - content
      - application/json
      - examples
      - default
      - $ref
    message: '''#/components/examples/ping'' does not exist'
    severity: 0
    range:
      start:
        line: 11078
        character: 22
      end:
        line: 11078
        character: 50
  - code: invalid-ref
    path:
      - x-webhooks
      - ping
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - schema
      - $ref
    message: '''#/components/schemas/webhook-ping-form-encoded'' does not exist'
    severity: 0
    range:
      start:
        line: 11081
        character: 20
      end:
        line: 11081
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - ping
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - examples
      - default
      - $ref
    message: '''#/components/examples/ping-form-encoded'' does not exist'
    severity: 0
    range:
      start:
        line: 11084
        character: 22
      end:
        line: 11084
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - project-card-converted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-card-converted'' does not exist'
    severity: 0
    range:
      start:
        line: 11181
        character: 20
      end:
        line: 11181
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - project-card-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-card-created'' does not exist'
    severity: 0
    range:
      start:
        line: 11275
        character: 20
      end:
        line: 11275
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - project-card-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-card-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 11369
        character: 20
      end:
        line: 11369
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - project-card-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-card-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 11463
        character: 20
      end:
        line: 11463
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - project-card-moved
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-card-moved'' does not exist'
    severity: 0
    range:
      start:
        line: 11559
        character: 20
      end:
        line: 11559
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - project-closed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-closed'' does not exist'
    severity: 0
    range:
      start:
        line: 11653
        character: 20
      end:
        line: 11653
        character: 65
  - code: invalid-ref
    path:
      - x-webhooks
      - project-column-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-column-created'' does not exist'
    severity: 0
    range:
      start:
        line: 11747
        character: 20
      end:
        line: 11747
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - project-column-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-column-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 11841
        character: 20
      end:
        line: 11841
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - project-column-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-column-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 11935
        character: 20
      end:
        line: 11935
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - project-column-moved
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-column-moved'' does not exist'
    severity: 0
    range:
      start:
        line: 12029
        character: 20
      end:
        line: 12029
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - project-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-created'' does not exist'
    severity: 0
    range:
      start:
        line: 12123
        character: 20
      end:
        line: 12123
        character: 66
  - code: invalid-ref
    path:
      - x-webhooks
      - project-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 12217
        character: 20
      end:
        line: 12217
        character: 66
  - code: invalid-ref
    path:
      - x-webhooks
      - project-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 12311
        character: 20
      end:
        line: 12311
        character: 65
  - code: invalid-ref
    path:
      - x-webhooks
      - project-reopened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-project-reopened'' does not exist'
    severity: 0
    range:
      start:
        line: 12405
        character: 20
      end:
        line: 12405
        character: 67
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-closed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-project-closed'' does not exist'
    severity: 0
    range:
      start:
        line: 12498
        character: 20
      end:
        line: 12498
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-project-created'' does not exist'
    severity: 0
    range:
      start:
        line: 12590
        character: 20
      end:
        line: 12590
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-project-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 12682
        character: 20
      end:
        line: 12682
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-project-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 12776
        character: 20
      end:
        line: 12776
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-item-archived
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-item-archived'' does not exist'
    severity: 0
    range:
      start:
        line: 12872
        character: 20
      end:
        line: 12872
        character: 76
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-item-converted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-item-converted'' does not exist'
    severity: 0
    range:
      start:
        line: 12965
        character: 20
      end:
        line: 12965
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-item-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-item-created'' does not exist'
    severity: 0
    range:
      start:
        line: 13058
        character: 20
      end:
        line: 13058
        character: 75
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-item-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-item-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 13151
        character: 20
      end:
        line: 13151
        character: 75
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-item-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-item-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 13247
        character: 20
      end:
        line: 13247
        character: 74
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-item-reordered
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-item-reordered'' does not exist'
    severity: 0
    range:
      start:
        line: 13343
        character: 20
      end:
        line: 13343
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-item-restored
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-item-restored'' does not exist'
    severity: 0
    range:
      start:
        line: 13439
        character: 20
      end:
        line: 13439
        character: 76
  - code: invalid-ref
    path:
      - x-webhooks
      - projects-v2-reopened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-projects-v2-project-reopened'' does not exist'
    severity: 0
    range:
      start:
        line: 13531
        character: 20
      end:
        line: 13531
        character: 79
  - code: invalid-ref
    path:
      - x-webhooks
      - public
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-public'' does not exist'
    severity: 0
    range:
      start:
        line: 13609
        character: 20
      end:
        line: 13609
        character: 57
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-assigned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-assigned'' does not exist'
    severity: 0
    range:
      start:
        line: 13701
        character: 20
      end:
        line: 13701
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-auto-merge-disabled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-auto-merge-disabled' does not
      exist
    severity: 0
    range:
      start:
        line: 13796
        character: 20
      end:
        line: 13796
        character: 83
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-auto-merge-enabled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-auto-merge-enabled' does not
      exist
    severity: 0
    range:
      start:
        line: 13891
        character: 20
      end:
        line: 13891
        character: 82
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-closed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-closed'' does not exist'
    severity: 0
    range:
      start:
        line: 13986
        character: 20
      end:
        line: 13986
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-converted-to-draft
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-converted-to-draft' does not
      exist
    severity: 0
    range:
      start:
        line: 14081
        character: 20
      end:
        line: 14081
        character: 82
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-demilestoned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-demilestoned'' does not exist'
    severity: 0
    range:
      start:
        line: 14173
        character: 20
      end:
        line: 14173
        character: 76
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 14267
        character: 20
      end:
        line: 14267
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-labeled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-labeled'' does not exist'
    severity: 0
    range:
      start:
        line: 14359
        character: 20
      end:
        line: 14359
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-locked
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-locked'' does not exist'
    severity: 0
    range:
      start:
        line: 14454
        character: 20
      end:
        line: 14454
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-milestoned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-milestoned'' does not exist'
    severity: 0
    range:
      start:
        line: 14546
        character: 20
      end:
        line: 14546
        character: 74
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-opened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-opened'' does not exist'
    severity: 0
    range:
      start:
        line: 14638
        character: 20
      end:
        line: 14638
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-ready-for-review
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-ready-for-review' does not
      exist
    severity: 0
    range:
      start:
        line: 14733
        character: 20
      end:
        line: 14733
        character: 80
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-reopened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-reopened'' does not exist'
    severity: 0
    range:
      start:
        line: 14825
        character: 20
      end:
        line: 14825
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-review-comment-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-review-comment-created' does
      not exist
    severity: 0
    range:
      start:
        line: 14917
        character: 20
      end:
        line: 14917
        character: 86
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-review-comment-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-review-comment-deleted' does
      not exist
    severity: 0
    range:
      start:
        line: 15009
        character: 20
      end:
        line: 15009
        character: 86
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-review-comment-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-review-comment-edited' does not
      exist
    severity: 0
    range:
      start:
        line: 15101
        character: 20
      end:
        line: 15101
        character: 85
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-review-dismissed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-review-dismissed' does not
      exist
    severity: 0
    range:
      start:
        line: 15195
        character: 20
      end:
        line: 15195
        character: 80
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-review-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-review-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 15289
        character: 20
      end:
        line: 15289
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-review-request-removed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-review-request-removed' does
      not exist
    severity: 0
    range:
      start:
        line: 15383
        character: 20
      end:
        line: 15383
        character: 86
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-review-requested
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-review-requested' does not
      exist
    severity: 0
    range:
      start:
        line: 15478
        character: 20
      end:
        line: 15478
        character: 80
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-review-submitted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-review-submitted' does not
      exist
    severity: 0
    range:
      start:
        line: 15572
        character: 20
      end:
        line: 15572
        character: 80
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-review-thread-resolved
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-review-thread-resolved' does
      not exist
    severity: 0
    range:
      start:
        line: 15664
        character: 20
      end:
        line: 15664
        character: 86
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-review-thread-unresolved
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-pull-request-review-thread-unresolved' does
      not exist
    severity: 0
    range:
      start:
        line: 15758
        character: 20
      end:
        line: 15759
        character: 82
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-synchronize
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-synchronize'' does not exist'
    severity: 0
    range:
      start:
        line: 15854
        character: 20
      end:
        line: 15854
        character: 75
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-unassigned
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-unassigned'' does not exist'
    severity: 0
    range:
      start:
        line: 15946
        character: 20
      end:
        line: 15946
        character: 74
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-unlabeled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-unlabeled'' does not exist'
    severity: 0
    range:
      start:
        line: 16038
        character: 20
      end:
        line: 16038
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - pull-request-unlocked
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-pull-request-unlocked'' does not exist'
    severity: 0
    range:
      start:
        line: 16133
        character: 20
      end:
        line: 16133
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - push
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-push'' does not exist'
    severity: 0
    range:
      start:
        line: 16220
        character: 20
      end:
        line: 16220
        character: 55
  - code: invalid-ref
    path:
      - x-webhooks
      - registry-package-published
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-registry-package-published'' does not exist'
    severity: 0
    range:
      start:
        line: 16310
        character: 20
      end:
        line: 16310
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - registry-package-updated
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-registry-package-updated'' does not exist'
    severity: 0
    range:
      start:
        line: 16400
        character: 20
      end:
        line: 16400
        character: 75
  - code: invalid-ref
    path:
      - x-webhooks
      - release-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-release-created'' does not exist'
    severity: 0
    range:
      start:
        line: 16487
        character: 20
      end:
        line: 16487
        character: 66
  - code: invalid-ref
    path:
      - x-webhooks
      - release-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-release-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 16572
        character: 20
      end:
        line: 16572
        character: 66
  - code: invalid-ref
    path:
      - x-webhooks
      - release-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-release-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 16660
        character: 20
      end:
        line: 16660
        character: 65
  - code: invalid-ref
    path:
      - x-webhooks
      - release-prereleased
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-release-prereleased'' does not exist'
    severity: 0
    range:
      start:
        line: 16747
        character: 20
      end:
        line: 16747
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - release-published
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-release-published'' does not exist'
    severity: 0
    range:
      start:
        line: 16832
        character: 20
      end:
        line: 16832
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - release-released
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-release-released'' does not exist'
    severity: 0
    range:
      start:
        line: 16917
        character: 20
      end:
        line: 16917
        character: 67
  - code: invalid-ref
    path:
      - x-webhooks
      - release-unpublished
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-release-unpublished'' does not exist'
    severity: 0
    range:
      start:
        line: 17002
        character: 20
      end:
        line: 17002
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-anonymous-access-disabled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-repository-anonymous-access-disabled' does
      not exist
    severity: 0
    range:
      start:
        line: 17090
        character: 20
      end:
        line: 17091
        character: 81
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-anonymous-access-enabled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-repository-anonymous-access-enabled' does
      not exist
    severity: 0
    range:
      start:
        line: 17180
        character: 20
      end:
        line: 17180
        character: 86
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-archived
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-repository-archived'' does not exist'
    severity: 0
    range:
      start:
        line: 17266
        character: 20
      end:
        line: 17266
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-repository-created'' does not exist'
    severity: 0
    range:
      start:
        line: 17352
        character: 20
      end:
        line: 17352
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-repository-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 17440
        character: 20
      end:
        line: 17440
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-dispatch-sample.collected
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-repository-dispatch-sample'' does not exist'
    severity: 0
    range:
      start:
        line: 17524
        character: 20
      end:
        line: 17524
        character: 77
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-repository-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 17609
        character: 20
      end:
        line: 17609
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-privatized
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-repository-privatized'' does not exist'
    severity: 0
    range:
      start:
        line: 17695
        character: 20
      end:
        line: 17695
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-publicized
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-repository-publicized'' does not exist'
    severity: 0
    range:
      start:
        line: 17781
        character: 20
      end:
        line: 17781
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-renamed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-repository-renamed'' does not exist'
    severity: 0
    range:
      start:
        line: 17867
        character: 20
      end:
        line: 17867
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-transferred
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-repository-transferred'' does not exist'
    severity: 0
    range:
      start:
        line: 17958
        character: 20
      end:
        line: 17958
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-unarchived
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-repository-unarchived'' does not exist'
    severity: 0
    range:
      start:
        line: 18044
        character: 20
      end:
        line: 18044
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-vulnerability-alert-create
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-repository-vulnerability-alert-create' does
      not exist
    severity: 0
    range:
      start:
        line: 18124
        character: 20
      end:
        line: 18125
        character: 82
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-vulnerability-alert-dismiss
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-repository-vulnerability-alert-dismiss' does
      not exist
    severity: 0
    range:
      start:
        line: 18203
        character: 20
      end:
        line: 18204
        character: 83
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-vulnerability-alert-reopen
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-repository-vulnerability-alert-reopen' does
      not exist
    severity: 0
    range:
      start:
        line: 18284
        character: 20
      end:
        line: 18285
        character: 82
  - code: invalid-ref
    path:
      - x-webhooks
      - repository-vulnerability-alert-resolve
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-repository-vulnerability-alert-resolve' does
      not exist
    severity: 0
    range:
      start:
        line: 18363
        character: 20
      end:
        line: 18364
        character: 83
  - code: invalid-ref
    path:
      - x-webhooks
      - secret-scanning-alert-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-secret-scanning-alert-created' does not
      exist
    severity: 0
    range:
      start:
        line: 18451
        character: 20
      end:
        line: 18451
        character: 80
  - code: invalid-ref
    path:
      - x-webhooks
      - secret-scanning-alert-location-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-secret-scanning-alert-location-created' does
      not exist
    severity: 0
    range:
      start:
        line: 18545
        character: 20
      end:
        line: 18546
        character: 83
  - code: invalid-ref
    path:
      - x-webhooks
      - secret-scanning-alert-location-created
      - post
      - requestBody
      - content
      - application/json
      - examples
      - default
      - $ref
    message: >-
      '#/components/examples/secret-scanning-alert-location-created' does not
      exist
    severity: 0
    range:
      start:
        line: 18549
        character: 22
      end:
        line: 18549
        character: 84
  - code: invalid-ref
    path:
      - x-webhooks
      - secret-scanning-alert-location-created
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-secret-scanning-alert-location-created-form-encoded'
      does not exist
    severity: 0
    range:
      start:
        line: 18552
        character: 20
      end:
        line: 18553
        character: 96
  - code: invalid-ref
    path:
      - x-webhooks
      - secret-scanning-alert-location-created
      - post
      - requestBody
      - content
      - application/x-www-form-urlencoded
      - examples
      - default
      - $ref
    message: >-
      '#/components/examples/secret-scanning-alert-location-created-form-encoded'
      does not exist
    severity: 0
    range:
      start:
        line: 18556
        character: 22
      end:
        line: 18557
        character: 91
  - code: invalid-ref
    path:
      - x-webhooks
      - secret-scanning-alert-reopened
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-secret-scanning-alert-reopened' does not
      exist
    severity: 0
    range:
      start:
        line: 18646
        character: 20
      end:
        line: 18646
        character: 81
  - code: invalid-ref
    path:
      - x-webhooks
      - secret-scanning-alert-resolved
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-secret-scanning-alert-resolved' does not
      exist
    severity: 0
    range:
      start:
        line: 18734
        character: 20
      end:
        line: 18734
        character: 81
  - code: invalid-ref
    path:
      - x-webhooks
      - secret-scanning-alert-revoked
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-secret-scanning-alert-revoked' does not
      exist
    severity: 0
    range:
      start:
        line: 18822
        character: 20
      end:
        line: 18822
        character: 80
  - code: invalid-ref
    path:
      - x-webhooks
      - security-advisory-published
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-security-advisory-published'' does not exist'
    severity: 0
    range:
      start:
        line: 18912
        character: 20
      end:
        line: 18912
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - security-advisory-updated
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-security-advisory-updated'' does not exist'
    severity: 0
    range:
      start:
        line: 19000
        character: 20
      end:
        line: 19000
        character: 76
  - code: invalid-ref
    path:
      - x-webhooks
      - security-advisory-withdrawn
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-security-advisory-withdrawn'' does not exist'
    severity: 0
    range:
      start:
        line: 19088
        character: 20
      end:
        line: 19088
        character: 78
  - code: invalid-ref
    path:
      - x-webhooks
      - security-and-analysis
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-security-and-analysis'' does not exist'
    severity: 0
    range:
      start:
        line: 19166
        character: 20
      end:
        line: 19166
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - sponsorship-cancelled
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-sponsorship-cancelled'' does not exist'
    severity: 0
    range:
      start:
        line: 19254
        character: 20
      end:
        line: 19254
        character: 72
  - code: invalid-ref
    path:
      - x-webhooks
      - sponsorship-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-sponsorship-created'' does not exist'
    severity: 0
    range:
      start:
        line: 19337
        character: 20
      end:
        line: 19337
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - sponsorship-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-sponsorship-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 19421
        character: 20
      end:
        line: 19421
        character: 69
  - code: invalid-ref
    path:
      - x-webhooks
      - sponsorship-pending-cancellation
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-sponsorship-pending-cancellation' does not
      exist
    severity: 0
    range:
      start:
        line: 19508
        character: 20
      end:
        line: 19508
        character: 83
  - code: invalid-ref
    path:
      - x-webhooks
      - sponsorship-pending-tier-change
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: >-
      '#/components/schemas/webhook-sponsorship-pending-tier-change' does not
      exist
    severity: 0
    range:
      start:
        line: 19591
        character: 20
      end:
        line: 19591
        character: 82
  - code: invalid-ref
    path:
      - x-webhooks
      - sponsorship-tier-changed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-sponsorship-tier-changed'' does not exist'
    severity: 0
    range:
      start:
        line: 19676
        character: 20
      end:
        line: 19676
        character: 75
  - code: invalid-ref
    path:
      - x-webhooks
      - star-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-star-created'' does not exist'
    severity: 0
    range:
      start:
        line: 19759
        character: 20
      end:
        line: 19759
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - star-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-star-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 19844
        character: 20
      end:
        line: 19844
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - status
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-status'' does not exist'
    severity: 0
    range:
      start:
        line: 19930
        character: 20
      end:
        line: 19930
        character: 57
  - code: invalid-ref
    path:
      - x-webhooks
      - team-add
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-team-add'' does not exist'
    severity: 0
    range:
      start:
        line: 20014
        character: 20
      end:
        line: 20014
        character: 59
  - code: invalid-ref
    path:
      - x-webhooks
      - team-added-to-repository
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-team-added-to-repository'' does not exist'
    severity: 0
    range:
      start:
        line: 20096
        character: 20
      end:
        line: 20096
        character: 75
  - code: invalid-ref
    path:
      - x-webhooks
      - team-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-team-created'' does not exist'
    severity: 0
    range:
      start:
        line: 20178
        character: 20
      end:
        line: 20178
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - team-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-team-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 20260
        character: 20
      end:
        line: 20260
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - team-edited
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-team-edited'' does not exist'
    severity: 0
    range:
      start:
        line: 20342
        character: 20
      end:
        line: 20342
        character: 62
  - code: invalid-ref
    path:
      - x-webhooks
      - team-removed-from-repository
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-team-removed-from-repository'' does not exist'
    severity: 0
    range:
      start:
        line: 20424
        character: 20
      end:
        line: 20424
        character: 79
  - code: invalid-ref
    path:
      - x-webhooks
      - user-created
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-user-created'' does not exist'
    severity: 0
    range:
      start:
        line: 20499
        character: 20
      end:
        line: 20499
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - user-deleted
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-user-deleted'' does not exist'
    severity: 0
    range:
      start:
        line: 20572
        character: 20
      end:
        line: 20572
        character: 63
  - code: invalid-ref
    path:
      - x-webhooks
      - watch-started
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-watch-started'' does not exist'
    severity: 0
    range:
      start:
        line: 20654
        character: 20
      end:
        line: 20654
        character: 64
  - code: invalid-ref
    path:
      - x-webhooks
      - workflow-dispatch
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-workflow-dispatch'' does not exist'
    severity: 0
    range:
      start:
        line: 20736
        character: 20
      end:
        line: 20736
        character: 68
  - code: invalid-ref
    path:
      - x-webhooks
      - workflow-job-completed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-workflow-job-completed'' does not exist'
    severity: 0
    range:
      start:
        line: 20824
        character: 20
      end:
        line: 20824
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - workflow-job-in-progress
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-workflow-job-in-progress'' does not exist'
    severity: 0
    range:
      start:
        line: 20912
        character: 20
      end:
        line: 20912
        character: 75
  - code: invalid-ref
    path:
      - x-webhooks
      - workflow-job-queued
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-workflow-job-queued'' does not exist'
    severity: 0
    range:
      start:
        line: 21000
        character: 20
      end:
        line: 21000
        character: 70
  - code: invalid-ref
    path:
      - x-webhooks
      - workflow-job-waiting
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-workflow-job-waiting'' does not exist'
    severity: 0
    range:
      start:
        line: 21088
        character: 20
      end:
        line: 21088
        character: 71
  - code: invalid-ref
    path:
      - x-webhooks
      - workflow-run-completed
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-workflow-run-completed'' does not exist'
    severity: 0
    range:
      start:
        line: 21181
        character: 20
      end:
        line: 21181
        character: 73
  - code: invalid-ref
    path:
      - x-webhooks
      - workflow-run-in-progress
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-workflow-run-in-progress'' does not exist'
    severity: 0
    range:
      start:
        line: 21271
        character: 20
      end:
        line: 21271
        character: 75
  - code: invalid-ref
    path:
      - x-webhooks
      - workflow-run-requested
      - post
      - requestBody
      - content
      - application/json
      - schema
      - $ref
    message: '''#/components/schemas/webhook-workflow-run-requested'' does not exist'
    severity: 0
    range:
      start:
        line: 21361
        character: 20
      end:
        line: 21361
        character: 73
  - code: openapi-components-examples-error
    message: Components MUST Have a Examples Property
    path:
      - components
    severity: 0
    range:
      start:
        line: 21376
        character: 11
      end:
        line: 21739
        character: 20
  - code: openapi-components-headers-error
    message: Components MUST Have a Headers Property
    path:
      - components
    severity: 0
    range:
      start:
        line: 21376
        character: 11
      end:
        line: 21739
        character: 20
  - code: openapi-components-parameters-error
    message: Components MUST Have a Parameters Property
    path:
      - components
    severity: 0
    range:
      start:
        line: 21376
        character: 11
      end:
        line: 21739
        character: 20
  - code: openapi-components-responses-error
    message: Components MUST have a responses property.
    path:
      - components
    severity: 0
    range:
      start:
        line: 21376
        character: 11
      end:
        line: 21739
        character: 20
  - code: openapi-security-schemes-info
    message: Components Have a Security Schemes
    path:
      - components
      - securitySchemes
    severity: 2
    range:
      start:
        line: 21377
        character: 18
      end:
        line: 21381
        character: 20
  - code: openapi-components-schemas-info
    message: Components Have a Schema Property
    path:
      - components
      - schemas
    severity: 2
    range:
      start:
        line: 21382
        character: 10
      end:
        line: 21739
        character: 20
  - code: openapi-schema-names-pascal-case-error
    message: Schema Names MUST Be PascalCase.
    path:
      - components
      - schemas
      - issue-comment
    severity: 0
    range:
      start:
        line: 21383
        character: 18
      end:
        line: 21439
        character: 20
  - code: openapi-schema-description-info
    message: Schemas Has a Description.
    path:
      - components
      - schemas
      - issue-comment
      - description
    severity: 2
    range:
      start:
        line: 21385
        character: 19
      end:
        line: 21385
        character: 80
  - code: openapi-schema-type-info
    message: Schema Has Type Property
    path:
      - components
      - schemas
      - issue-comment
      - type
    severity: 2
    range:
      start:
        line: 21386
        character: 12
      end:
        line: 21386
        character: 18
  - code: openapi-schema-properties-info
    message: Schema Have Properties
    path:
      - components
      - schemas
      - issue-comment
      - properties
    severity: 2
    range:
      start:
        line: 21387
        character: 17
      end:
        line: 21429
        character: 54
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - id
    severity: 2
    range:
      start:
        line: 21388
        character: 11
      end:
        line: 21392
        character: 23
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21393
        character: 16
      end:
        line: 21394
        character: 22
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - node_id
    severity: 2
    range:
      start:
        line: 21393
        character: 16
      end:
        line: 21394
        character: 22
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21393
        character: 16
      end:
        line: 21394
        character: 22
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21393
        character: 16
      end:
        line: 21394
        character: 22
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - url
    severity: 2
    range:
      start:
        line: 21395
        character: 12
      end:
        line: 21399
        character: 21
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - url
    severity: 0
    range:
      start:
        line: 21395
        character: 12
      end:
        line: 21399
        character: 21
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - url
    severity: 0
    range:
      start:
        line: 21395
        character: 12
      end:
        line: 21399
        character: 21
  - code: openapi-schema-properties-descriptions-info
    message: Schema Properties Have Description
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - url
      - description
    severity: 2
    range:
      start:
        line: 21396
        character: 23
      end:
        line: 21396
        character: 48
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body
    severity: 2
    range:
      start:
        line: 21400
        character: 13
      end:
        line: 21403
        character: 22
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body
    severity: 0
    range:
      start:
        line: 21400
        character: 13
      end:
        line: 21403
        character: 22
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body
    severity: 0
    range:
      start:
        line: 21400
        character: 13
      end:
        line: 21403
        character: 22
  - code: openapi-schema-properties-descriptions-info
    message: Schema Properties Have Description
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body
      - description
    severity: 2
    range:
      start:
        line: 21401
        character: 23
      end:
        line: 21401
        character: 52
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body_text
    severity: 0
    range:
      start:
        line: 21404
        character: 18
      end:
        line: 21405
        character: 22
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body_text
    severity: 2
    range:
      start:
        line: 21404
        character: 18
      end:
        line: 21405
        character: 22
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body_text
    severity: 0
    range:
      start:
        line: 21404
        character: 18
      end:
        line: 21405
        character: 22
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body_text
    severity: 0
    range:
      start:
        line: 21404
        character: 18
      end:
        line: 21405
        character: 22
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body_html
    severity: 0
    range:
      start:
        line: 21406
        character: 18
      end:
        line: 21407
        character: 22
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body_html
    severity: 2
    range:
      start:
        line: 21406
        character: 18
      end:
        line: 21407
        character: 22
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body_html
    severity: 0
    range:
      start:
        line: 21406
        character: 18
      end:
        line: 21407
        character: 22
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - body_html
    severity: 0
    range:
      start:
        line: 21406
        character: 18
      end:
        line: 21407
        character: 22
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - html_url
    severity: 0
    range:
      start:
        line: 21408
        character: 17
      end:
        line: 21410
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - html_url
    severity: 2
    range:
      start:
        line: 21408
        character: 17
      end:
        line: 21410
        character: 21
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - html_url
    severity: 0
    range:
      start:
        line: 21408
        character: 17
      end:
        line: 21410
        character: 21
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - html_url
    severity: 0
    range:
      start:
        line: 21408
        character: 17
      end:
        line: 21410
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - user
    severity: 2
    range:
      start:
        line: 21411
        character: 13
      end:
        line: 21412
        character: 59
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - user
      - $ref
    message: '''#/components/schemas/nullable-simple-user'' does not exist'
    severity: 0
    range:
      start:
        line: 21412
        character: 16
      end:
        line: 21412
        character: 59
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21413
        character: 19
      end:
        line: 21416
        character: 41
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - created_at
    severity: 2
    range:
      start:
        line: 21413
        character: 19
      end:
        line: 21416
        character: 41
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21413
        character: 19
      end:
        line: 21416
        character: 41
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21413
        character: 19
      end:
        line: 21416
        character: 41
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - updated_at
    severity: 0
    range:
      start:
        line: 21417
        character: 19
      end:
        line: 21420
        character: 41
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - updated_at
    severity: 2
    range:
      start:
        line: 21417
        character: 19
      end:
        line: 21420
        character: 41
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - updated_at
    severity: 0
    range:
      start:
        line: 21417
        character: 19
      end:
        line: 21420
        character: 41
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - updated_at
    severity: 0
    range:
      start:
        line: 21417
        character: 19
      end:
        line: 21420
        character: 41
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - issue_url
    severity: 0
    range:
      start:
        line: 21421
        character: 18
      end:
        line: 21423
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - issue_url
    severity: 2
    range:
      start:
        line: 21421
        character: 18
      end:
        line: 21423
        character: 21
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - issue_url
    severity: 0
    range:
      start:
        line: 21421
        character: 18
      end:
        line: 21423
        character: 21
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - issue_url
    severity: 0
    range:
      start:
        line: 21421
        character: 18
      end:
        line: 21423
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - author_association
    severity: 2
    range:
      start:
        line: 21424
        character: 27
      end:
        line: 21425
        character: 57
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - author_association
      - $ref
    message: '''#/components/schemas/author-association'' does not exist'
    severity: 0
    range:
      start:
        line: 21425
        character: 16
      end:
        line: 21425
        character: 57
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - performed_via_github_app
    severity: 2
    range:
      start:
        line: 21426
        character: 33
      end:
        line: 21427
        character: 59
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - performed_via_github_app
      - $ref
    message: '''#/components/schemas/nullable-integration'' does not exist'
    severity: 0
    range:
      start:
        line: 21427
        character: 16
      end:
        line: 21427
        character: 59
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - reactions
    severity: 2
    range:
      start:
        line: 21428
        character: 18
      end:
        line: 21429
        character: 54
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-comment
      - properties
      - reactions
      - $ref
    message: '''#/components/schemas/reaction-rollup'' does not exist'
    severity: 0
    range:
      start:
        line: 21429
        character: 16
      end:
        line: 21429
        character: 54
  - code: openapi-schema-required-info
    message: Schema Has Required Property
    path:
      - components
      - schemas
      - issue-comment
      - required
    severity: 2
    range:
      start:
        line: 21430
        character: 15
      end:
        line: 21439
        character: 20
  - code: openapi-schema-names-pascal-case-error
    message: Schema Names MUST Be PascalCase.
    path:
      - components
      - schemas
      - reaction
    severity: 0
    range:
      start:
        line: 21440
        character: 13
      end:
        line: 21477
        character: 20
  - code: openapi-schema-description-info
    message: Schemas Has a Description.
    path:
      - components
      - schemas
      - reaction
      - description
    severity: 2
    range:
      start:
        line: 21442
        character: 19
      end:
        line: 21444
        character: 45
  - code: openapi-schema-type-info
    message: Schema Has Type Property
    path:
      - components
      - schemas
      - reaction
      - type
    severity: 2
    range:
      start:
        line: 21445
        character: 12
      end:
        line: 21445
        character: 18
  - code: openapi-schema-properties-info
    message: Schema Have Properties
    path:
      - components
      - schemas
      - reaction
      - properties
    severity: 2
    range:
      start:
        line: 21446
        character: 17
      end:
        line: 21471
        character: 41
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - reaction
      - properties
      - id
    severity: 2
    range:
      start:
        line: 21447
        character: 11
      end:
        line: 21449
        character: 20
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - reaction
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21450
        character: 16
      end:
        line: 21452
        character: 35
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - reaction
      - properties
      - node_id
    severity: 2
    range:
      start:
        line: 21450
        character: 16
      end:
        line: 21452
        character: 35
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - reaction
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21450
        character: 16
      end:
        line: 21452
        character: 35
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - reaction
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21450
        character: 16
      end:
        line: 21452
        character: 35
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - reaction
      - properties
      - user
    severity: 2
    range:
      start:
        line: 21453
        character: 13
      end:
        line: 21454
        character: 59
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
    severity: 2
    range:
      start:
        line: 21455
        character: 16
      end:
        line: 21467
        character: 18
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
    severity: 0
    range:
      start:
        line: 21455
        character: 16
      end:
        line: 21467
        character: 18
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
    severity: 0
    range:
      start:
        line: 21455
        character: 16
      end:
        line: 21467
        character: 18
  - code: openapi-schema-properties-descriptions-info
    message: Schema Properties Have Description
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
      - description
    severity: 2
    range:
      start:
        line: 21456
        character: 23
      end:
        line: 21456
        character: 42
  - code: openapi-schema-properties-enum-info
    message: Schema Property Have Enum
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
      - enum
    severity: 2
    range:
      start:
        line: 21459
        character: 15
      end:
        line: 21467
        character: 18
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
      - enum
      - '0'
    severity: 0
    range:
      start:
        line: 21460
        character: 14
      end:
        line: 21460
        character: 18
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
      - enum
      - '1'
    severity: 0
    range:
      start:
        line: 21461
        character: 14
      end:
        line: 21461
        character: 18
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
      - enum
      - '2'
    severity: 0
    range:
      start:
        line: 21462
        character: 14
      end:
        line: 21462
        character: 19
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
      - enum
      - '3'
    severity: 0
    range:
      start:
        line: 21463
        character: 14
      end:
        line: 21463
        character: 22
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
      - enum
      - '4'
    severity: 0
    range:
      start:
        line: 21464
        character: 14
      end:
        line: 21464
        character: 19
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
      - enum
      - '5'
    severity: 0
    range:
      start:
        line: 21465
        character: 14
      end:
        line: 21465
        character: 20
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
      - enum
      - '6'
    severity: 0
    range:
      start:
        line: 21466
        character: 14
      end:
        line: 21466
        character: 20
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - reaction
      - properties
      - content
      - enum
      - '7'
    severity: 0
    range:
      start:
        line: 21467
        character: 14
      end:
        line: 21467
        character: 18
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - reaction
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21468
        character: 19
      end:
        line: 21471
        character: 41
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - reaction
      - properties
      - created_at
    severity: 2
    range:
      start:
        line: 21468
        character: 19
      end:
        line: 21471
        character: 41
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - reaction
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21468
        character: 19
      end:
        line: 21471
        character: 41
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - reaction
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21468
        character: 19
      end:
        line: 21471
        character: 41
  - code: openapi-schema-required-info
    message: Schema Has Required Property
    path:
      - components
      - schemas
      - reaction
      - required
    severity: 2
    range:
      start:
        line: 21472
        character: 15
      end:
        line: 21477
        character: 20
  - code: openapi-schema-names-pascal-case-error
    message: Schema Names MUST Be PascalCase.
    path:
      - components
      - schemas
      - issue-event
    severity: 0
    range:
      start:
        line: 21478
        character: 16
      end:
        line: 21549
        character: 20
  - code: openapi-schema-description-info
    message: Schemas Has a Description.
    path:
      - components
      - schemas
      - issue-event
      - description
    severity: 2
    range:
      start:
        line: 21480
        character: 19
      end:
        line: 21480
        character: 30
  - code: openapi-schema-type-info
    message: Schema Has Type Property
    path:
      - components
      - schemas
      - issue-event
      - type
    severity: 2
    range:
      start:
        line: 21481
        character: 12
      end:
        line: 21481
        character: 18
  - code: openapi-schema-properties-info
    message: Schema Have Properties
    path:
      - components
      - schemas
      - issue-event
      - properties
    severity: 2
    range:
      start:
        line: 21482
        character: 17
      end:
        line: 21540
        character: 59
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - id
    severity: 2
    range:
      start:
        line: 21483
        character: 11
      end:
        line: 21486
        character: 20
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-event
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21487
        character: 16
      end:
        line: 21489
        character: 39
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - node_id
    severity: 2
    range:
      start:
        line: 21487
        character: 16
      end:
        line: 21489
        character: 39
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21487
        character: 16
      end:
        line: 21489
        character: 39
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21487
        character: 16
      end:
        line: 21489
        character: 39
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-event
      - properties
      - url
    severity: 0
    range:
      start:
        line: 21490
        character: 12
      end:
        line: 21493
        character: 83
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - url
    severity: 2
    range:
      start:
        line: 21490
        character: 12
      end:
        line: 21493
        character: 83
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - url
    severity: 0
    range:
      start:
        line: 21490
        character: 12
      end:
        line: 21493
        character: 83
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - url
    severity: 0
    range:
      start:
        line: 21490
        character: 12
      end:
        line: 21493
        character: 83
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - actor
    severity: 2
    range:
      start:
        line: 21494
        character: 14
      end:
        line: 21495
        character: 59
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-event
      - properties
      - event
    severity: 0
    range:
      start:
        line: 21496
        character: 14
      end:
        line: 21498
        character: 25
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - event
    severity: 2
    range:
      start:
        line: 21496
        character: 14
      end:
        line: 21498
        character: 25
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - event
    severity: 0
    range:
      start:
        line: 21496
        character: 14
      end:
        line: 21498
        character: 25
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - event
    severity: 0
    range:
      start:
        line: 21496
        character: 14
      end:
        line: 21498
        character: 25
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-event
      - properties
      - commit_id
    severity: 0
    range:
      start:
        line: 21499
        character: 18
      end:
        line: 21502
        character: 24
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - commit_id
    severity: 2
    range:
      start:
        line: 21499
        character: 18
      end:
        line: 21502
        character: 24
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - commit_id
    severity: 0
    range:
      start:
        line: 21499
        character: 18
      end:
        line: 21502
        character: 24
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - commit_id
    severity: 0
    range:
      start:
        line: 21499
        character: 18
      end:
        line: 21502
        character: 24
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-event
      - properties
      - commit_url
    severity: 0
    range:
      start:
        line: 21503
        character: 19
      end:
        line: 21507
        character: 24
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - commit_url
    severity: 2
    range:
      start:
        line: 21503
        character: 19
      end:
        line: 21507
        character: 24
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - commit_url
    severity: 0
    range:
      start:
        line: 21503
        character: 19
      end:
        line: 21507
        character: 24
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - commit_url
    severity: 0
    range:
      start:
        line: 21503
        character: 19
      end:
        line: 21507
        character: 24
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-event
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21508
        character: 19
      end:
        line: 21511
        character: 41
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - created_at
    severity: 2
    range:
      start:
        line: 21508
        character: 19
      end:
        line: 21511
        character: 41
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21508
        character: 19
      end:
        line: 21511
        character: 41
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21508
        character: 19
      end:
        line: 21511
        character: 41
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - issue
    severity: 2
    range:
      start:
        line: 21512
        character: 14
      end:
        line: 21513
        character: 53
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-event
      - properties
      - issue
      - $ref
    message: '''#/components/schemas/nullable-issue'' does not exist'
    severity: 0
    range:
      start:
        line: 21513
        character: 16
      end:
        line: 21513
        character: 53
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - label
    severity: 2
    range:
      start:
        line: 21514
        character: 14
      end:
        line: 21515
        character: 56
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-event
      - properties
      - label
      - $ref
    message: '''#/components/schemas/issue-event-label'' does not exist'
    severity: 0
    range:
      start:
        line: 21515
        character: 16
      end:
        line: 21515
        character: 56
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - assignee
    severity: 2
    range:
      start:
        line: 21516
        character: 17
      end:
        line: 21517
        character: 59
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - assigner
    severity: 2
    range:
      start:
        line: 21518
        character: 17
      end:
        line: 21519
        character: 59
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - review_requester
    severity: 2
    range:
      start:
        line: 21520
        character: 25
      end:
        line: 21521
        character: 59
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - requested_reviewer
    severity: 2
    range:
      start:
        line: 21522
        character: 27
      end:
        line: 21523
        character: 59
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - requested_team
    severity: 2
    range:
      start:
        line: 21524
        character: 23
      end:
        line: 21525
        character: 43
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-event
      - properties
      - requested_team
      - $ref
    message: '''#/components/schemas/team'' does not exist'
    severity: 0
    range:
      start:
        line: 21525
        character: 16
      end:
        line: 21525
        character: 43
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - dismissed_review
    severity: 2
    range:
      start:
        line: 21526
        character: 25
      end:
        line: 21527
        character: 67
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-event
      - properties
      - dismissed_review
      - $ref
    message: '''#/components/schemas/issue-event-dismissed-review'' does not exist'
    severity: 0
    range:
      start:
        line: 21527
        character: 16
      end:
        line: 21527
        character: 67
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - milestone
    severity: 2
    range:
      start:
        line: 21528
        character: 18
      end:
        line: 21529
        character: 60
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-event
      - properties
      - milestone
      - $ref
    message: '''#/components/schemas/issue-event-milestone'' does not exist'
    severity: 0
    range:
      start:
        line: 21529
        character: 16
      end:
        line: 21529
        character: 60
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - project_card
    severity: 2
    range:
      start:
        line: 21530
        character: 21
      end:
        line: 21531
        character: 63
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-event
      - properties
      - project_card
      - $ref
    message: '''#/components/schemas/issue-event-project-card'' does not exist'
    severity: 0
    range:
      start:
        line: 21531
        character: 16
      end:
        line: 21531
        character: 63
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - rename
    severity: 2
    range:
      start:
        line: 21532
        character: 15
      end:
        line: 21533
        character: 57
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue-event
      - properties
      - rename
      - $ref
    message: '''#/components/schemas/issue-event-rename'' does not exist'
    severity: 0
    range:
      start:
        line: 21533
        character: 16
      end:
        line: 21533
        character: 57
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - author_association
    severity: 2
    range:
      start:
        line: 21534
        character: 27
      end:
        line: 21535
        character: 57
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue-event
      - properties
      - lock_reason
    severity: 0
    range:
      start:
        line: 21536
        character: 20
      end:
        line: 21538
        character: 24
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - lock_reason
    severity: 2
    range:
      start:
        line: 21536
        character: 20
      end:
        line: 21538
        character: 24
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - lock_reason
    severity: 0
    range:
      start:
        line: 21536
        character: 20
      end:
        line: 21538
        character: 24
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue-event
      - properties
      - lock_reason
    severity: 0
    range:
      start:
        line: 21536
        character: 20
      end:
        line: 21538
        character: 24
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue-event
      - properties
      - performed_via_github_app
    severity: 2
    range:
      start:
        line: 21539
        character: 33
      end:
        line: 21540
        character: 59
  - code: openapi-schema-required-info
    message: Schema Has Required Property
    path:
      - components
      - schemas
      - issue-event
      - required
    severity: 2
    range:
      start:
        line: 21541
        character: 15
      end:
        line: 21549
        character: 20
  - code: openapi-schema-names-pascal-case-error
    message: Schema Names MUST Be PascalCase.
    path:
      - components
      - schemas
      - issue
    severity: 0
    range:
      start:
        line: 21550
        character: 10
      end:
        line: 21739
        character: 20
  - code: openapi-schema-description-info
    message: Schemas Has a Description.
    path:
      - components
      - schemas
      - issue
      - description
    severity: 2
    range:
      start:
        line: 21552
        character: 19
      end:
        line: 21554
        character: 26
  - code: openapi-schema-type-info
    message: Schema Has Type Property
    path:
      - components
      - schemas
      - issue
      - type
    severity: 2
    range:
      start:
        line: 21555
        character: 12
      end:
        line: 21555
        character: 18
  - code: openapi-schema-properties-info
    message: Schema Have Properties
    path:
      - components
      - schemas
      - issue
      - properties
    severity: 2
    range:
      start:
        line: 21556
        character: 17
      end:
        line: 21717
        character: 54
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - id
    severity: 2
    range:
      start:
        line: 21557
        character: 11
      end:
        line: 21559
        character: 23
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21560
        character: 16
      end:
        line: 21561
        character: 22
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - node_id
    severity: 2
    range:
      start:
        line: 21560
        character: 16
      end:
        line: 21561
        character: 22
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21560
        character: 16
      end:
        line: 21561
        character: 22
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - node_id
    severity: 0
    range:
      start:
        line: 21560
        character: 16
      end:
        line: 21561
        character: 22
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - url
    severity: 2
    range:
      start:
        line: 21562
        character: 12
      end:
        line: 21566
        character: 21
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - url
    severity: 0
    range:
      start:
        line: 21562
        character: 12
      end:
        line: 21566
        character: 21
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - url
    severity: 0
    range:
      start:
        line: 21562
        character: 12
      end:
        line: 21566
        character: 21
  - code: openapi-schema-properties-descriptions-info
    message: Schema Properties Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - url
      - description
    severity: 2
    range:
      start:
        line: 21563
        character: 23
      end:
        line: 21563
        character: 40
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - repository_url
    severity: 0
    range:
      start:
        line: 21567
        character: 23
      end:
        line: 21569
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - repository_url
    severity: 2
    range:
      start:
        line: 21567
        character: 23
      end:
        line: 21569
        character: 21
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - repository_url
    severity: 0
    range:
      start:
        line: 21567
        character: 23
      end:
        line: 21569
        character: 21
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - repository_url
    severity: 0
    range:
      start:
        line: 21567
        character: 23
      end:
        line: 21569
        character: 21
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - labels_url
    severity: 0
    range:
      start:
        line: 21570
        character: 19
      end:
        line: 21571
        character: 22
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - labels_url
    severity: 2
    range:
      start:
        line: 21570
        character: 19
      end:
        line: 21571
        character: 22
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - labels_url
    severity: 0
    range:
      start:
        line: 21570
        character: 19
      end:
        line: 21571
        character: 22
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - labels_url
    severity: 0
    range:
      start:
        line: 21570
        character: 19
      end:
        line: 21571
        character: 22
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - comments_url
    severity: 0
    range:
      start:
        line: 21572
        character: 21
      end:
        line: 21574
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - comments_url
    severity: 2
    range:
      start:
        line: 21572
        character: 21
      end:
        line: 21574
        character: 21
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - comments_url
    severity: 0
    range:
      start:
        line: 21572
        character: 21
      end:
        line: 21574
        character: 21
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - comments_url
    severity: 0
    range:
      start:
        line: 21572
        character: 21
      end:
        line: 21574
        character: 21
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - events_url
    severity: 0
    range:
      start:
        line: 21575
        character: 19
      end:
        line: 21577
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - events_url
    severity: 2
    range:
      start:
        line: 21575
        character: 19
      end:
        line: 21577
        character: 21
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - events_url
    severity: 0
    range:
      start:
        line: 21575
        character: 19
      end:
        line: 21577
        character: 21
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - events_url
    severity: 0
    range:
      start:
        line: 21575
        character: 19
      end:
        line: 21577
        character: 21
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - html_url
    severity: 0
    range:
      start:
        line: 21578
        character: 17
      end:
        line: 21580
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - html_url
    severity: 2
    range:
      start:
        line: 21578
        character: 17
      end:
        line: 21580
        character: 21
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - html_url
    severity: 0
    range:
      start:
        line: 21578
        character: 17
      end:
        line: 21580
        character: 21
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - html_url
    severity: 0
    range:
      start:
        line: 21578
        character: 17
      end:
        line: 21580
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - number
    severity: 2
    range:
      start:
        line: 21581
        character: 15
      end:
        line: 21584
        character: 23
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - state
    severity: 2
    range:
      start:
        line: 21585
        character: 14
      end:
        line: 21588
        character: 22
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - state
    severity: 0
    range:
      start:
        line: 21585
        character: 14
      end:
        line: 21588
        character: 22
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - state
    severity: 0
    range:
      start:
        line: 21585
        character: 14
      end:
        line: 21588
        character: 22
  - code: openapi-schema-properties-descriptions-info
    message: Schema Properties Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - state
      - description
    severity: 2
    range:
      start:
        line: 21586
        character: 23
      end:
        line: 21586
        character: 68
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - state_reason
    severity: 2
    range:
      start:
        line: 21589
        character: 21
      end:
        line: 21597
        character: 25
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - state_reason
    severity: 0
    range:
      start:
        line: 21589
        character: 21
      end:
        line: 21597
        character: 25
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - state_reason
    severity: 0
    range:
      start:
        line: 21589
        character: 21
      end:
        line: 21597
        character: 25
  - code: openapi-schema-properties-descriptions-info
    message: Schema Properties Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - state_reason
      - description
    severity: 2
    range:
      start:
        line: 21590
        character: 23
      end:
        line: 21590
        character: 55
  - code: openapi-schema-properties-enum-info
    message: Schema Property Have Enum
    path:
      - components
      - schemas
      - issue
      - properties
      - state_reason
      - enum
    severity: 2
    range:
      start:
        line: 21594
        character: 15
      end:
        line: 21597
        character: 25
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - issue
      - properties
      - state_reason
      - enum
      - '0'
    severity: 0
    range:
      start:
        line: 21595
        character: 14
      end:
        line: 21595
        character: 23
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - issue
      - properties
      - state_reason
      - enum
      - '1'
    severity: 0
    range:
      start:
        line: 21596
        character: 14
      end:
        line: 21596
        character: 22
  - code: openapi-schema-properties-enum-casing-error
    message: Schema Property Enum MUST Be Upper Snake Case
    path:
      - components
      - schemas
      - issue
      - properties
      - state_reason
      - enum
      - '2'
    severity: 0
    range:
      start:
        line: 21597
        character: 14
      end:
        line: 21597
        character: 25
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - title
    severity: 2
    range:
      start:
        line: 21598
        character: 14
      end:
        line: 21601
        character: 22
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - title
    severity: 0
    range:
      start:
        line: 21598
        character: 14
      end:
        line: 21601
        character: 22
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - title
    severity: 0
    range:
      start:
        line: 21598
        character: 14
      end:
        line: 21601
        character: 22
  - code: openapi-schema-properties-descriptions-info
    message: Schema Properties Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - title
      - description
    severity: 2
    range:
      start:
        line: 21599
        character: 23
      end:
        line: 21599
        character: 41
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - body
    severity: 2
    range:
      start:
        line: 21602
        character: 13
      end:
        line: 21609
        character: 24
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - body
    severity: 0
    range:
      start:
        line: 21602
        character: 13
      end:
        line: 21609
        character: 24
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - body
    severity: 0
    range:
      start:
        line: 21602
        character: 13
      end:
        line: 21609
        character: 24
  - code: openapi-schema-properties-descriptions-info
    message: Schema Properties Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - body
      - description
    severity: 2
    range:
      start:
        line: 21603
        character: 23
      end:
        line: 21603
        character: 44
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - user
    severity: 2
    range:
      start:
        line: 21610
        character: 13
      end:
        line: 21611
        character: 59
  - code: openapi-schema-properties-array-maxitems-error
    message: Schema Array Properties MUST Have Max Items
    path:
      - components
      - schemas
      - issue
      - properties
      - labels
    severity: 0
    range:
      start:
        line: 21612
        character: 15
      end:
        line: 21644
        character: 33
  - code: openapi-schema-properties-array-maxitems-info
    message: Schema Array Properties Have Max Items
    path:
      - components
      - schemas
      - issue
      - properties
      - labels
    severity: 2
    range:
      start:
        line: 21612
        character: 15
      end:
        line: 21644
        character: 33
  - code: openapi-schema-properties-array-minitems-error
    message: Schema Array Properties MUST Have Min Items
    path:
      - components
      - schemas
      - issue
      - properties
      - labels
    severity: 0
    range:
      start:
        line: 21612
        character: 15
      end:
        line: 21644
        character: 33
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - labels
    severity: 2
    range:
      start:
        line: 21612
        character: 15
      end:
        line: 21644
        character: 33
  - code: openapi-schema-properties-array-items-info
    message: Schema Array Properties Has Items
    path:
      - components
      - schemas
      - issue
      - properties
      - labels
      - items
    severity: 2
    range:
      start:
        line: 21622
        character: 16
      end:
        line: 21644
        character: 33
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - assignee
    severity: 2
    range:
      start:
        line: 21645
        character: 17
      end:
        line: 21646
        character: 59
  - code: openapi-schema-properties-array-maxitems-error
    message: Schema Array Properties MUST Have Max Items
    path:
      - components
      - schemas
      - issue
      - properties
      - assignees
    severity: 0
    range:
      start:
        line: 21647
        character: 18
      end:
        line: 21651
        character: 24
  - code: openapi-schema-properties-array-maxitems-info
    message: Schema Array Properties Have Max Items
    path:
      - components
      - schemas
      - issue
      - properties
      - assignees
    severity: 2
    range:
      start:
        line: 21647
        character: 18
      end:
        line: 21651
        character: 24
  - code: openapi-schema-properties-array-minitems-error
    message: Schema Array Properties MUST Have Min Items
    path:
      - components
      - schemas
      - issue
      - properties
      - assignees
    severity: 0
    range:
      start:
        line: 21647
        character: 18
      end:
        line: 21651
        character: 24
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - assignees
    severity: 2
    range:
      start:
        line: 21647
        character: 18
      end:
        line: 21651
        character: 24
  - code: openapi-schema-properties-array-items-info
    message: Schema Array Properties Has Items
    path:
      - components
      - schemas
      - issue
      - properties
      - assignees
      - items
    severity: 2
    range:
      start:
        line: 21649
        character: 16
      end:
        line: 21650
        character: 52
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue
      - properties
      - assignees
      - items
      - $ref
    message: '''#/components/schemas/simple-user'' does not exist'
    severity: 0
    range:
      start:
        line: 21650
        character: 18
      end:
        line: 21650
        character: 52
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - milestone
    severity: 2
    range:
      start:
        line: 21652
        character: 18
      end:
        line: 21653
        character: 57
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue
      - properties
      - milestone
      - $ref
    message: '''#/components/schemas/nullable-milestone'' does not exist'
    severity: 0
    range:
      start:
        line: 21653
        character: 16
      end:
        line: 21653
        character: 57
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - locked
    severity: 2
    range:
      start:
        line: 21654
        character: 15
      end:
        line: 21655
        character: 23
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - active_lock_reason
    severity: 0
    range:
      start:
        line: 21656
        character: 27
      end:
        line: 21658
        character: 24
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - active_lock_reason
    severity: 2
    range:
      start:
        line: 21656
        character: 27
      end:
        line: 21658
        character: 24
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - active_lock_reason
    severity: 0
    range:
      start:
        line: 21656
        character: 27
      end:
        line: 21658
        character: 24
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - active_lock_reason
    severity: 0
    range:
      start:
        line: 21656
        character: 27
      end:
        line: 21658
        character: 24
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - comments
    severity: 2
    range:
      start:
        line: 21659
        character: 17
      end:
        line: 21660
        character: 23
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - pull_request
    severity: 2
    range:
      start:
        line: 21661
        character: 21
      end:
        line: 21688
        character: 17
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - closed_at
    severity: 0
    range:
      start:
        line: 21689
        character: 18
      end:
        line: 21692
        character: 24
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - closed_at
    severity: 2
    range:
      start:
        line: 21689
        character: 18
      end:
        line: 21692
        character: 24
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - closed_at
    severity: 0
    range:
      start:
        line: 21689
        character: 18
      end:
        line: 21692
        character: 24
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - closed_at
    severity: 0
    range:
      start:
        line: 21689
        character: 18
      end:
        line: 21692
        character: 24
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21693
        character: 19
      end:
        line: 21695
        character: 27
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - created_at
    severity: 2
    range:
      start:
        line: 21693
        character: 19
      end:
        line: 21695
        character: 27
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21693
        character: 19
      end:
        line: 21695
        character: 27
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - created_at
    severity: 0
    range:
      start:
        line: 21693
        character: 19
      end:
        line: 21695
        character: 27
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - updated_at
    severity: 0
    range:
      start:
        line: 21696
        character: 19
      end:
        line: 21698
        character: 27
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - updated_at
    severity: 2
    range:
      start:
        line: 21696
        character: 19
      end:
        line: 21698
        character: 27
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - updated_at
    severity: 0
    range:
      start:
        line: 21696
        character: 19
      end:
        line: 21698
        character: 27
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - updated_at
    severity: 0
    range:
      start:
        line: 21696
        character: 19
      end:
        line: 21698
        character: 27
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - draft
    severity: 2
    range:
      start:
        line: 21699
        character: 14
      end:
        line: 21700
        character: 23
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - closed_by
    severity: 2
    range:
      start:
        line: 21701
        character: 18
      end:
        line: 21702
        character: 59
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - body_html
    severity: 0
    range:
      start:
        line: 21703
        character: 18
      end:
        line: 21704
        character: 22
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - body_html
    severity: 2
    range:
      start:
        line: 21703
        character: 18
      end:
        line: 21704
        character: 22
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - body_html
    severity: 0
    range:
      start:
        line: 21703
        character: 18
      end:
        line: 21704
        character: 22
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - body_html
    severity: 0
    range:
      start:
        line: 21703
        character: 18
      end:
        line: 21704
        character: 22
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - body_text
    severity: 0
    range:
      start:
        line: 21705
        character: 18
      end:
        line: 21706
        character: 22
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - body_text
    severity: 2
    range:
      start:
        line: 21705
        character: 18
      end:
        line: 21706
        character: 22
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - body_text
    severity: 0
    range:
      start:
        line: 21705
        character: 18
      end:
        line: 21706
        character: 22
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - body_text
    severity: 0
    range:
      start:
        line: 21705
        character: 18
      end:
        line: 21706
        character: 22
  - code: openapi-schema-properties-descriptions-error
    message: Schema Properties MUST Have Description
    path:
      - components
      - schemas
      - issue
      - properties
      - timeline_url
    severity: 0
    range:
      start:
        line: 21707
        character: 21
      end:
        line: 21709
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - timeline_url
    severity: 2
    range:
      start:
        line: 21707
        character: 21
      end:
        line: 21709
        character: 21
  - code: openapi-schema-properties-string-maxlength-error
    message: Schema String Properties MUST Have Maximum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - timeline_url
    severity: 0
    range:
      start:
        line: 21707
        character: 21
      end:
        line: 21709
        character: 21
  - code: openapi-schema-properties-string-minlength-error
    message: Schema String Properties MUST Have Minimum Length
    path:
      - components
      - schemas
      - issue
      - properties
      - timeline_url
    severity: 0
    range:
      start:
        line: 21707
        character: 21
      end:
        line: 21709
        character: 21
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - repository
    severity: 2
    range:
      start:
        line: 21710
        character: 19
      end:
        line: 21711
        character: 49
  - code: invalid-ref
    path:
      - components
      - schemas
      - issue
      - properties
      - repository
      - $ref
    message: '''#/components/schemas/repository'' does not exist'
    severity: 0
    range:
      start:
        line: 21711
        character: 16
      end:
        line: 21711
        character: 49
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - performed_via_github_app
    severity: 2
    range:
      start:
        line: 21712
        character: 33
      end:
        line: 21713
        character: 59
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - author_association
    severity: 2
    range:
      start:
        line: 21714
        character: 27
      end:
        line: 21715
        character: 57
  - code: openapi-schema-properties-names-camel-case-info
    message: Schema Property Names Are camelCase.
    path:
      - components
      - schemas
      - issue
      - properties
      - reactions
    severity: 2
    range:
      start:
        line: 21716
        character: 18
      end:
        line: 21717
        character: 54
  - code: openapi-schema-required-info
    message: Schema Has Required Property
    path:
      - components
      - schemas
      - issue
      - required
    severity: 2
    range:
      start:
        line: 21718
        character: 15
      end:
        line: 21739
        character: 20
